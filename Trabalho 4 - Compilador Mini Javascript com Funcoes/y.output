Terminals unused in grammar

    PRINT
    COMENTARIO


State 140 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDz

    2 CMDz: CMD CMDz
    3     | %empty

    4 CMDs: CMD CMDs
    5     | CMD

    6 CMD: CMD_DECL ';'
    7    | CMD_IF
    8    | CMD_FOR
    9    | CMD_WHILE
   10    | CMD_FUNCTION
   11    | CMD_RETURN
   12    | ';'
   13    | EXPR ';'
   14    | ATRIB ';'
   15    | BLOCO

   16 CMD_RETURN: RETURN RVALUE ';'

   17 CMD_FUNCTION: FUNCTION ID '(' ')' '{' CMDz '}'

   18 CMD_IF: IF '(' RVALUE ')' CMD
   19       | IF '(' RVALUE ')' CMD ELSE CMD

   20 CMD_WHILE: WHILE '(' RVALUE ')' CMD

   21 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   22        | FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD

   23 LVALUE: ID

   24 LVALUEPROP: EXPR '.' ID
   25           | EXPR '[' RVALUE ']'

   26 RVALUE: ATRIB
   27       | EXPR
   28       | '{' '}'

   29 EXPR: EXPR MEIG EXPR
   30     | EXPR MAIG EXPR
   31     | EXPR IG EXPR
   32     | EXPR DIF EXPR
   33     | EXPR '^' EXPR
   34     | EXPR '<' EXPR
   35     | EXPR '>' EXPR
   36     | EXPR '*' EXPR
   37     | EXPR '+' EXPR
   38     | EXPR '-' EXPR
   39     | EXPR '/' EXPR
   40     | EXPR '%' EXPR
   41     | LVALUE INCREM
   42     | LVALUE DECREM
   43     | '+' EXPR
   44     | '-' EXPR
   45     | FINAL

   46 CMD_DECL: CMD_LET
   47         | CMD_VAR
   48         | CMD_CONST

   49 CMD_LET: LET MULTI_LET

   50 MULTI_LET: ID '=' RVALUE ',' MULTI_LET
   51          | ID '=' RVALUE
   52          | ID ',' MULTI_LET
   53          | ID

   54 CMD_VAR: VAR MULTI_VAR

   55 MULTI_VAR: ID '=' RVALUE ',' MULTI_VAR
   56          | ID '=' RVALUE
   57          | ID ',' MULTI_VAR
   58          | ID

   59 CMD_CONST: CONST MULTI_CONST

   60 MULTI_CONST: ID '=' RVALUE ',' MULTI_CONST
   61            | ID '=' RVALUE
   62            | ID ',' MULTI_CONST
   63            | ID

   64 ATRIB: LVALUE '=' RVALUE
   65      | LVALUE MAATR RVALUE
   66      | LVALUE MEATR RVALUE
   67      | LVALUEPROP '=' RVALUE
   68      | LVALUEPROP MAATR RVALUE
   69      | LVALUEPROP MEATR RVALUE

   70 FINAL: NUM
   71      | STRING
   72      | NEWARRAY
   73      | '(' RVALUE ')'
   74      | LVALUE
   75      | LVALUEPROP
   76      | ID '(' ')'

   77 @1: %empty

   78 $@2: %empty

   79 BLOCO: '{' @1 CMDs $@2 '}'
   80      | '{' '}'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 40
    '(' (40) 17 18 19 20 21 22 73 76
    ')' (41) 17 18 19 20 21 22 73 76
    '*' (42) 36
    '+' (43) 37 43
    ',' (44) 50 52 55 57 60 62
    '-' (45) 38 44
    '.' (46) 24
    '/' (47) 39
    ';' (59) 6 12 13 14 16 21 22
    '<' (60) 34
    '=' (61) 50 51 55 56 60 61 64 67
    '>' (62) 35
    '[' (91) 25
    ']' (93) 25
    '^' (94) 33
    '{' (123) 17 28 79 80
    '}' (125) 17 28 79 80
    error (256)
    PRINT (258)
    ID (259) 17 23 24 50 51 52 53 55 56 57 58 60 61 62 63 76
    NUM (260) 70
    MAIG (261) 30
    MEIG (262) 29
    IG (263) 31
    DIF (264) 32
    MAATR (265) 65 68
    MEATR (266) 66 69
    INCREM (267) 41
    DECREM (268) 42
    STRING (269) 71
    COMENTARIO (270)
    LET (271) 49
    CONST (272) 59
    VAR (273) 54
    IF (274) 18 19
    ELSE (275) 19
    WHILE (276) 20
    FOR (277) 21 22
    NEWARRAY (278) 72
    FUNCTION (279) 17
    RETURN (280) 16


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    S (45)
        on left: 1
        on right: 0
    CMDz (46)
        on left: 2 3
        on right: 1 2 17
    CMDs (47)
        on left: 4 5
        on right: 4 79
    CMD (48)
        on left: 6 7 8 9 10 11 12 13 14 15
        on right: 2 4 5 18 19 20 21 22
    CMD_RETURN (49)
        on left: 16
        on right: 11
    CMD_FUNCTION (50)
        on left: 17
        on right: 10
    CMD_IF (51)
        on left: 18 19
        on right: 7
    CMD_WHILE (52)
        on left: 20
        on right: 9
    CMD_FOR (53)
        on left: 21 22
        on right: 8
    LVALUE (54)
        on left: 23
        on right: 41 42 64 65 66 74
    LVALUEPROP (55)
        on left: 24 25
        on right: 67 68 69 75
    RVALUE (56)
        on left: 26 27 28
        on right: 16 18 19 20 21 22 25 50 51 55 56 60 61 64 65 66 67 68 69 73
    EXPR (57)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
        on right: 13 24 25 27 29 30 31 32 33 34 35 36 37 38 39 40 43 44
    CMD_DECL (58)
        on left: 46 47 48
        on right: 6 21
    CMD_LET (59)
        on left: 49
        on right: 46
    MULTI_LET (60)
        on left: 50 51 52 53
        on right: 49 50 52
    CMD_VAR (61)
        on left: 54
        on right: 47
    MULTI_VAR (62)
        on left: 55 56 57 58
        on right: 54 55 57
    CMD_CONST (63)
        on left: 59
        on right: 48
    MULTI_CONST (64)
        on left: 60 61 62 63
        on right: 59 60 62
    ATRIB (65)
        on left: 64 65 66 67 68 69
        on right: 14 21 22 26
    FINAL (66)
        on left: 70 71 72 73 74 75 76
        on right: 45
    BLOCO (67)
        on left: 79 80
        on right: 15
    @1 (68)
        on left: 77
        on right: 79
    $@2 (69)
        on left: 78
        on right: 79


State 0

    0 $accept: . S $end

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 3 (CMDz)

    S             go to state 18
    CMDz          go to state 19
    CMD           go to state 20
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 1

   23 LVALUE: ID .
   76 FINAL: ID . '(' ')'

    '('  shift, and go to state 36

    $default  reduce using rule 23 (LVALUE)


State 2

   70 FINAL: NUM .

    $default  reduce using rule 70 (FINAL)


State 3

   71 FINAL: STRING .

    $default  reduce using rule 71 (FINAL)


State 4

   49 CMD_LET: LET . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 38


State 5

   59 CMD_CONST: CONST . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 40


State 6

   54 CMD_VAR: VAR . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 42


State 7

   18 CMD_IF: IF . '(' RVALUE ')' CMD
   19       | IF . '(' RVALUE ')' CMD ELSE CMD

    '('  shift, and go to state 43


State 8

   20 CMD_WHILE: WHILE . '(' RVALUE ')' CMD

    '('  shift, and go to state 44


State 9

   21 CMD_FOR: FOR . '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   22        | FOR . '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD

    '('  shift, and go to state 45


State 10

   72 FINAL: NEWARRAY .

    $default  reduce using rule 72 (FINAL)


State 11

   17 CMD_FUNCTION: FUNCTION . ID '(' ')' '{' CMDz '}'

    ID  shift, and go to state 46


State 12

   16 CMD_RETURN: RETURN . RVALUE ';'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 48
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 13

   43 EXPR: '+' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 53
    FINAL       go to state 34


State 14

   44 EXPR: '-' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 54
    FINAL       go to state 34


State 15

   12 CMD: ';' .

    $default  reduce using rule 12 (CMD)


State 16

   73 FINAL: '(' . RVALUE ')'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 55
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 17

   79 BLOCO: '{' . @1 CMDs $@2 '}'
   80      | '{' . '}'

    '}'  shift, and go to state 56

    $default  reduce using rule 77 (@1)

    @1  go to state 57


State 18

    0 $accept: S . $end

    $end  shift, and go to state 58


State 19

    1 S: CMDz .

    $default  reduce using rule 1 (S)


State 20

    2 CMDz: CMD . CMDz

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 59
    CMD           go to state 20
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 21

   11 CMD: CMD_RETURN .

    $default  reduce using rule 11 (CMD)


State 22

   10 CMD: CMD_FUNCTION .

    $default  reduce using rule 10 (CMD)


State 23

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


State 24

    9 CMD: CMD_WHILE .

    $default  reduce using rule 9 (CMD)


State 25

    8 CMD: CMD_FOR .

    $default  reduce using rule 8 (CMD)


State 26

   41 EXPR: LVALUE . INCREM
   42     | LVALUE . DECREM
   64 ATRIB: LVALUE . '=' RVALUE
   65      | LVALUE . MAATR RVALUE
   66      | LVALUE . MEATR RVALUE
   74 FINAL: LVALUE .

    MAATR   shift, and go to state 60
    MEATR   shift, and go to state 61
    INCREM  shift, and go to state 62
    DECREM  shift, and go to state 63
    '='     shift, and go to state 64

    $default  reduce using rule 74 (FINAL)


State 27

   67 ATRIB: LVALUEPROP . '=' RVALUE
   68      | LVALUEPROP . MAATR RVALUE
   69      | LVALUEPROP . MEATR RVALUE
   75 FINAL: LVALUEPROP .

    MAATR  shift, and go to state 65
    MEATR  shift, and go to state 66
    '='    shift, and go to state 67

    $default  reduce using rule 75 (FINAL)


State 28

   13 CMD: EXPR . ';'
   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    MAIG  shift, and go to state 68
    MEIG  shift, and go to state 69
    IG    shift, and go to state 70
    DIF   shift, and go to state 71
    '<'   shift, and go to state 72
    '>'   shift, and go to state 73
    '+'   shift, and go to state 74
    '-'   shift, and go to state 75
    '*'   shift, and go to state 76
    '/'   shift, and go to state 77
    '%'   shift, and go to state 78
    '^'   shift, and go to state 79
    '.'   shift, and go to state 80
    '['   shift, and go to state 81
    ';'   shift, and go to state 82


State 29

    6 CMD: CMD_DECL . ';'

    ';'  shift, and go to state 83


State 30

   46 CMD_DECL: CMD_LET .

    $default  reduce using rule 46 (CMD_DECL)


State 31

   47 CMD_DECL: CMD_VAR .

    $default  reduce using rule 47 (CMD_DECL)


State 32

   48 CMD_DECL: CMD_CONST .

    $default  reduce using rule 48 (CMD_DECL)


State 33

   14 CMD: ATRIB . ';'

    ';'  shift, and go to state 84


State 34

   45 EXPR: FINAL .

    $default  reduce using rule 45 (EXPR)


State 35

   15 CMD: BLOCO .

    $default  reduce using rule 15 (CMD)


State 36

   76 FINAL: ID '(' . ')'

    ')'  shift, and go to state 85


State 37

   50 MULTI_LET: ID . '=' RVALUE ',' MULTI_LET
   51          | ID . '=' RVALUE
   52          | ID . ',' MULTI_LET
   53          | ID .

    '='  shift, and go to state 86
    ','  shift, and go to state 87

    $default  reduce using rule 53 (MULTI_LET)


State 38

   49 CMD_LET: LET MULTI_LET .

    $default  reduce using rule 49 (CMD_LET)


State 39

   60 MULTI_CONST: ID . '=' RVALUE ',' MULTI_CONST
   61            | ID . '=' RVALUE
   62            | ID . ',' MULTI_CONST
   63            | ID .

    '='  shift, and go to state 88
    ','  shift, and go to state 89

    $default  reduce using rule 63 (MULTI_CONST)


State 40

   59 CMD_CONST: CONST MULTI_CONST .

    $default  reduce using rule 59 (CMD_CONST)


State 41

   55 MULTI_VAR: ID . '=' RVALUE ',' MULTI_VAR
   56          | ID . '=' RVALUE
   57          | ID . ',' MULTI_VAR
   58          | ID .

    '='  shift, and go to state 90
    ','  shift, and go to state 91

    $default  reduce using rule 58 (MULTI_VAR)


State 42

   54 CMD_VAR: VAR MULTI_VAR .

    $default  reduce using rule 54 (CMD_VAR)


State 43

   18 CMD_IF: IF '(' . RVALUE ')' CMD
   19       | IF '(' . RVALUE ')' CMD ELSE CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 92
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 44

   20 CMD_WHILE: WHILE '(' . RVALUE ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 93
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 45

   21 CMD_FOR: FOR '(' . CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   22        | FOR '(' . ATRIB ';' RVALUE ';' ATRIB ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    EXPR        go to state 94
    CMD_DECL    go to state 95
    CMD_LET     go to state 30
    CMD_VAR     go to state 31
    CMD_CONST   go to state 32
    ATRIB       go to state 96
    FINAL       go to state 34


State 46

   17 CMD_FUNCTION: FUNCTION ID . '(' ')' '{' CMDz '}'

    '('  shift, and go to state 97


State 47

   28 RVALUE: '{' . '}'

    '}'  shift, and go to state 98


State 48

   16 CMD_RETURN: RETURN RVALUE . ';'

    ';'  shift, and go to state 99


State 49

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   27 RVALUE: EXPR .
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    MAIG  shift, and go to state 68
    MEIG  shift, and go to state 69
    IG    shift, and go to state 70
    DIF   shift, and go to state 71
    '<'   shift, and go to state 72
    '>'   shift, and go to state 73
    '+'   shift, and go to state 74
    '-'   shift, and go to state 75
    '*'   shift, and go to state 76
    '/'   shift, and go to state 77
    '%'   shift, and go to state 78
    '^'   shift, and go to state 79
    '.'   shift, and go to state 80
    '['   shift, and go to state 81

    $default  reduce using rule 27 (RVALUE)


State 50

   26 RVALUE: ATRIB .

    $default  reduce using rule 26 (RVALUE)


State 51

   41 EXPR: LVALUE . INCREM
   42     | LVALUE . DECREM
   74 FINAL: LVALUE .

    INCREM  shift, and go to state 62
    DECREM  shift, and go to state 63

    $default  reduce using rule 74 (FINAL)


State 52

   75 FINAL: LVALUEPROP .

    $default  reduce using rule 75 (FINAL)


State 53

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR
   43     | '+' EXPR .

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 43 (EXPR)


State 54

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR
   44     | '-' EXPR .

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 44 (EXPR)


State 55

   73 FINAL: '(' RVALUE . ')'

    ')'  shift, and go to state 100


State 56

   80 BLOCO: '{' '}' .

    $default  reduce using rule 80 (BLOCO)


State 57

   79 BLOCO: '{' @1 . CMDs $@2 '}'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    CMDs          go to state 101
    CMD           go to state 102
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 58

    0 $accept: S $end .

    $default  accept


State 59

    2 CMDz: CMD CMDz .

    $default  reduce using rule 2 (CMDz)


State 60

   65 ATRIB: LVALUE MAATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 103
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 61

   66 ATRIB: LVALUE MEATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 104
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 62

   41 EXPR: LVALUE INCREM .

    $default  reduce using rule 41 (EXPR)


State 63

   42 EXPR: LVALUE DECREM .

    $default  reduce using rule 42 (EXPR)


State 64

   64 ATRIB: LVALUE '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 105
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 65

   68 ATRIB: LVALUEPROP MAATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 106
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 66

   69 ATRIB: LVALUEPROP MEATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 107
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 67

   67 ATRIB: LVALUEPROP '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 108
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 68

   30 EXPR: EXPR MAIG . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 109
    FINAL       go to state 34


State 69

   29 EXPR: EXPR MEIG . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 110
    FINAL       go to state 34


State 70

   31 EXPR: EXPR IG . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 111
    FINAL       go to state 34


State 71

   32 EXPR: EXPR DIF . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 112
    FINAL       go to state 34


State 72

   34 EXPR: EXPR '<' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 113
    FINAL       go to state 34


State 73

   35 EXPR: EXPR '>' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 114
    FINAL       go to state 34


State 74

   37 EXPR: EXPR '+' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 115
    FINAL       go to state 34


State 75

   38 EXPR: EXPR '-' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 116
    FINAL       go to state 34


State 76

   36 EXPR: EXPR '*' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 117
    FINAL       go to state 34


State 77

   39 EXPR: EXPR '/' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 118
    FINAL       go to state 34


State 78

   40 EXPR: EXPR '%' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 119
    FINAL       go to state 34


State 79

   33 EXPR: EXPR '^' . EXPR

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 51
    LVALUEPROP  go to state 52
    EXPR        go to state 120
    FINAL       go to state 34


State 80

   24 LVALUEPROP: EXPR '.' . ID

    ID  shift, and go to state 121


State 81

   25 LVALUEPROP: EXPR '[' . RVALUE ']'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 122
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 82

   13 CMD: EXPR ';' .

    $default  reduce using rule 13 (CMD)


State 83

    6 CMD: CMD_DECL ';' .

    $default  reduce using rule 6 (CMD)


State 84

   14 CMD: ATRIB ';' .

    $default  reduce using rule 14 (CMD)


State 85

   76 FINAL: ID '(' ')' .

    $default  reduce using rule 76 (FINAL)


State 86

   50 MULTI_LET: ID '=' . RVALUE ',' MULTI_LET
   51          | ID '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 123
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 87

   52 MULTI_LET: ID ',' . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 124


State 88

   60 MULTI_CONST: ID '=' . RVALUE ',' MULTI_CONST
   61            | ID '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 125
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 89

   62 MULTI_CONST: ID ',' . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 126


State 90

   55 MULTI_VAR: ID '=' . RVALUE ',' MULTI_VAR
   56          | ID '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 127
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 91

   57 MULTI_VAR: ID ',' . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 128


State 92

   18 CMD_IF: IF '(' RVALUE . ')' CMD
   19       | IF '(' RVALUE . ')' CMD ELSE CMD

    ')'  shift, and go to state 129


State 93

   20 CMD_WHILE: WHILE '(' RVALUE . ')' CMD

    ')'  shift, and go to state 130


State 94

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    MAIG  shift, and go to state 68
    MEIG  shift, and go to state 69
    IG    shift, and go to state 70
    DIF   shift, and go to state 71
    '<'   shift, and go to state 72
    '>'   shift, and go to state 73
    '+'   shift, and go to state 74
    '-'   shift, and go to state 75
    '*'   shift, and go to state 76
    '/'   shift, and go to state 77
    '%'   shift, and go to state 78
    '^'   shift, and go to state 79
    '.'   shift, and go to state 80
    '['   shift, and go to state 81


State 95

   21 CMD_FOR: FOR '(' CMD_DECL . ';' RVALUE ';' ATRIB ')' CMD

    ';'  shift, and go to state 131


State 96

   22 CMD_FOR: FOR '(' ATRIB . ';' RVALUE ';' ATRIB ')' CMD

    ';'  shift, and go to state 132


State 97

   17 CMD_FUNCTION: FUNCTION ID '(' . ')' '{' CMDz '}'

    ')'  shift, and go to state 133


State 98

   28 RVALUE: '{' '}' .

    $default  reduce using rule 28 (RVALUE)


State 99

   16 CMD_RETURN: RETURN RVALUE ';' .

    $default  reduce using rule 16 (CMD_RETURN)


State 100

   73 FINAL: '(' RVALUE ')' .

    $default  reduce using rule 73 (FINAL)


State 101

   79 BLOCO: '{' @1 CMDs . $@2 '}'

    $default  reduce using rule 78 ($@2)

    $@2  go to state 134


State 102

    4 CMDs: CMD . CMDs
    5     | CMD .

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 5 (CMDs)

    CMDs          go to state 135
    CMD           go to state 102
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 103

   65 ATRIB: LVALUE MAATR RVALUE .

    $default  reduce using rule 65 (ATRIB)


State 104

   66 ATRIB: LVALUE MEATR RVALUE .

    $default  reduce using rule 66 (ATRIB)


State 105

   64 ATRIB: LVALUE '=' RVALUE .

    $default  reduce using rule 64 (ATRIB)


State 106

   68 ATRIB: LVALUEPROP MAATR RVALUE .

    $default  reduce using rule 68 (ATRIB)


State 107

   69 ATRIB: LVALUEPROP MEATR RVALUE .

    $default  reduce using rule 69 (ATRIB)


State 108

   67 ATRIB: LVALUEPROP '=' RVALUE .

    $default  reduce using rule 67 (ATRIB)


State 109

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   30     | EXPR MAIG EXPR .
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 30 (EXPR)


State 110

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   29     | EXPR MEIG EXPR .
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 29 (EXPR)


State 111

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   31     | EXPR IG EXPR .
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 31 (EXPR)


State 112

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   32     | EXPR DIF EXPR .
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 32 (EXPR)


State 113

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   34     | EXPR '<' EXPR .
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 34 (EXPR)


State 114

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   35     | EXPR '>' EXPR .
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 35 (EXPR)


State 115

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   37     | EXPR '+' EXPR .
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 37 (EXPR)


State 116

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   38     | EXPR '-' EXPR .
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 38 (EXPR)


State 117

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   36     | EXPR '*' EXPR .
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 36 (EXPR)


State 118

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   39     | EXPR '/' EXPR .
   40     | EXPR . '%' EXPR

    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 39 (EXPR)


State 119

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR
   40     | EXPR '%' EXPR .

    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 40 (EXPR)


State 120

   24 LVALUEPROP: EXPR . '.' ID
   25           | EXPR . '[' RVALUE ']'
   29 EXPR: EXPR . MEIG EXPR
   30     | EXPR . MAIG EXPR
   31     | EXPR . IG EXPR
   32     | EXPR . DIF EXPR
   33     | EXPR . '^' EXPR
   33     | EXPR '^' EXPR .
   34     | EXPR . '<' EXPR
   35     | EXPR . '>' EXPR
   36     | EXPR . '*' EXPR
   37     | EXPR . '+' EXPR
   38     | EXPR . '-' EXPR
   39     | EXPR . '/' EXPR
   40     | EXPR . '%' EXPR

    '^'  shift, and go to state 79
    '.'  shift, and go to state 80
    '['  shift, and go to state 81

    $default  reduce using rule 33 (EXPR)


State 121

   24 LVALUEPROP: EXPR '.' ID .

    $default  reduce using rule 24 (LVALUEPROP)


State 122

   25 LVALUEPROP: EXPR '[' RVALUE . ']'

    ']'  shift, and go to state 136


State 123

   50 MULTI_LET: ID '=' RVALUE . ',' MULTI_LET
   51          | ID '=' RVALUE .

    ','  shift, and go to state 137

    $default  reduce using rule 51 (MULTI_LET)


State 124

   52 MULTI_LET: ID ',' MULTI_LET .

    $default  reduce using rule 52 (MULTI_LET)


State 125

   60 MULTI_CONST: ID '=' RVALUE . ',' MULTI_CONST
   61            | ID '=' RVALUE .

    ','  shift, and go to state 138

    $default  reduce using rule 61 (MULTI_CONST)


State 126

   62 MULTI_CONST: ID ',' MULTI_CONST .

    $default  reduce using rule 62 (MULTI_CONST)


State 127

   55 MULTI_VAR: ID '=' RVALUE . ',' MULTI_VAR
   56          | ID '=' RVALUE .

    ','  shift, and go to state 139

    $default  reduce using rule 56 (MULTI_VAR)


State 128

   57 MULTI_VAR: ID ',' MULTI_VAR .

    $default  reduce using rule 57 (MULTI_VAR)


State 129

   18 CMD_IF: IF '(' RVALUE ')' . CMD
   19       | IF '(' RVALUE ')' . CMD ELSE CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    CMD           go to state 140
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 130

   20 CMD_WHILE: WHILE '(' RVALUE ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    CMD           go to state 141
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 131

   21 CMD_FOR: FOR '(' CMD_DECL ';' . RVALUE ';' ATRIB ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 142
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 132

   22 CMD_FOR: FOR '(' ATRIB ';' . RVALUE ';' ATRIB ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16
    '{'       shift, and go to state 47

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    RVALUE      go to state 143
    EXPR        go to state 49
    ATRIB       go to state 50
    FINAL       go to state 34


State 133

   17 CMD_FUNCTION: FUNCTION ID '(' ')' . '{' CMDz '}'

    '{'  shift, and go to state 144


State 134

   79 BLOCO: '{' @1 CMDs $@2 . '}'

    '}'  shift, and go to state 145


State 135

    4 CMDs: CMD CMDs .

    $default  reduce using rule 4 (CMDs)


State 136

   25 LVALUEPROP: EXPR '[' RVALUE ']' .

    $default  reduce using rule 25 (LVALUEPROP)


State 137

   50 MULTI_LET: ID '=' RVALUE ',' . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 146


State 138

   60 MULTI_CONST: ID '=' RVALUE ',' . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 147


State 139

   55 MULTI_VAR: ID '=' RVALUE ',' . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 148


State 140

   18 CMD_IF: IF '(' RVALUE ')' CMD .
   19       | IF '(' RVALUE ')' CMD . ELSE CMD

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 18 (CMD_IF)]
    $default  reduce using rule 18 (CMD_IF)


State 141

   20 CMD_WHILE: WHILE '(' RVALUE ')' CMD .

    $default  reduce using rule 20 (CMD_WHILE)


State 142

   21 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE . ';' ATRIB ')' CMD

    ';'  shift, and go to state 150


State 143

   22 CMD_FOR: FOR '(' ATRIB ';' RVALUE . ';' ATRIB ')' CMD

    ';'  shift, and go to state 151


State 144

   17 CMD_FUNCTION: FUNCTION ID '(' ')' '{' . CMDz '}'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 152
    CMD           go to state 20
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 145

   79 BLOCO: '{' @1 CMDs $@2 '}' .

    $default  reduce using rule 79 (BLOCO)


State 146

   50 MULTI_LET: ID '=' RVALUE ',' MULTI_LET .

    $default  reduce using rule 50 (MULTI_LET)


State 147

   60 MULTI_CONST: ID '=' RVALUE ',' MULTI_CONST .

    $default  reduce using rule 60 (MULTI_CONST)


State 148

   55 MULTI_VAR: ID '=' RVALUE ',' MULTI_VAR .

    $default  reduce using rule 55 (MULTI_VAR)


State 149

   19 CMD_IF: IF '(' RVALUE ')' CMD ELSE . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    CMD           go to state 153
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 150

   21 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' . ATRIB ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    EXPR        go to state 94
    ATRIB       go to state 154
    FINAL       go to state 34


State 151

   22 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' . ATRIB ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    NEWARRAY  shift, and go to state 10
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '('       shift, and go to state 16

    LVALUE      go to state 26
    LVALUEPROP  go to state 27
    EXPR        go to state 94
    ATRIB       go to state 155
    FINAL       go to state 34


State 152

   17 CMD_FUNCTION: FUNCTION ID '(' ')' '{' CMDz . '}'

    '}'  shift, and go to state 156


State 153

   19 CMD_IF: IF '(' RVALUE ')' CMD ELSE CMD .

    $default  reduce using rule 19 (CMD_IF)


State 154

   21 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB . ')' CMD

    ')'  shift, and go to state 157


State 155

   22 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB . ')' CMD

    ')'  shift, and go to state 158


State 156

   17 CMD_FUNCTION: FUNCTION ID '(' ')' '{' CMDz '}' .

    $default  reduce using rule 17 (CMD_FUNCTION)


State 157

   21 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    CMD           go to state 159
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 158

   22 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    NEWARRAY  shift, and go to state 10
    FUNCTION  shift, and go to state 11
    RETURN    shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    ';'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    CMD           go to state 160
    CMD_RETURN    go to state 21
    CMD_FUNCTION  go to state 22
    CMD_IF        go to state 23
    CMD_WHILE     go to state 24
    CMD_FOR       go to state 25
    LVALUE        go to state 26
    LVALUEPROP    go to state 27
    EXPR          go to state 28
    CMD_DECL      go to state 29
    CMD_LET       go to state 30
    CMD_VAR       go to state 31
    CMD_CONST     go to state 32
    ATRIB         go to state 33
    FINAL         go to state 34
    BLOCO         go to state 35


State 159

   21 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD .

    $default  reduce using rule 21 (CMD_FOR)


State 160

   22 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD .

    $default  reduce using rule 22 (CMD_FOR)
