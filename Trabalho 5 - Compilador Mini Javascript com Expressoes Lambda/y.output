Terminals unused in grammar

    COMENTARIO


State 174 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDz

    2 CMDz: CMD CMDz
    3     | %empty

    4 CMDs: CMD CMDs
    5     | CMD

    6 CMD: CMD_DECL ';'
    7    | CMD_IF
    8    | CMD_FOR
    9    | CMD_WHILE
   10    | CMD_FUNCTION
   11    | CMD_RETURN
   12    | ';'
   13    | EXPR ';'
   14    | EXPR ASM ';'
   15    | ATRIB ';'
   16    | BLOCO

   17 CMD_RETURN: RETURN RVALUE ';'

   18 $@1: %empty

   19 $@2: %empty

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz '}' $@2

   21 $@3: %empty

   22 $@4: %empty

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz '}' $@4

   24 PARAMS: PARAMS ',' ID
   25       | ID

   26 CMD_IF: IF '(' RVALUE ')' CMD
   27       | IF '(' RVALUE ')' CMD ELSE CMD

   28 CMD_WHILE: WHILE '(' RVALUE ')' CMD

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   30        | FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD

   31 LVALUE: ID

   32 LVALUEPROP: EXPR '.' ID
   33           | EXPR '[' RVALUE ']'

   34 RVALUE: ATRIB
   35       | EXPR
   36       | '{' '}'
   37       | '{' LIT_DECLS '}'
   38       | '[' ']'
   39       | '[' ARRAY_DECLS ']'
   40       | ANONYMOUS_FUNCTION
   41       | ARROW_FUNCTION

   42 LIT_DECLS: ID ':' RVALUE ',' LIT_DECLS
   43          | ID ':' RVALUE

   44 ARRAY_DECLS: ARRAY_DECLS ',' RVALUE
   45            | RVALUE

   46 $@5: %empty

   47 $@6: %empty

   48 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz '}' $@6

   49 $@7: %empty

   50 $@8: %empty

   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz '}' $@8

   52 ARROW_FUNCTION: ARROW_PARAMS SETA EXPR

   53 ARROW_PARAMS: ID

   54 $@9: %empty

   55 ARROW_PARAMS: ABRE_PAR_SETA $@9 PARAMS ')'
   56             | '(' ')'

   57 EXPR: EXPR MEIG EXPR
   58     | EXPR MAIG EXPR
   59     | EXPR IG EXPR
   60     | EXPR DIF EXPR
   61     | EXPR '^' EXPR
   62     | EXPR '<' EXPR
   63     | EXPR '>' EXPR
   64     | EXPR '*' EXPR
   65     | EXPR '+' EXPR
   66     | EXPR '-' EXPR
   67     | EXPR '/' EXPR
   68     | EXPR '%' EXPR
   69     | '+' EXPR
   70     | '-' EXPR
   71     | FINAL
   72     | FINAL '(' ')'
   73     | FINAL '(' ARGS ')'

   74 CMD_DECL: CMD_LET
   75         | CMD_VAR
   76         | CMD_CONST

   77 CMD_LET: LET MULTI_LET

   78 MULTI_LET: ID '=' RVALUE ',' MULTI_LET
   79          | ID '=' RVALUE
   80          | ID ',' MULTI_LET
   81          | ID

   82 CMD_VAR: VAR MULTI_VAR

   83 MULTI_VAR: ID '=' RVALUE ',' MULTI_VAR
   84          | ID '=' RVALUE
   85          | ID ',' MULTI_VAR
   86          | ID

   87 CMD_CONST: CONST MULTI_CONST

   88 MULTI_CONST: ID '=' RVALUE ',' MULTI_CONST
   89            | ID '=' RVALUE
   90            | ID ',' MULTI_CONST
   91            | ID

   92 ATRIB: LVALUE '=' RVALUE
   93      | LVALUE MAATR RVALUE
   94      | LVALUE MEATR RVALUE
   95      | LVALUEPROP '=' RVALUE
   96      | LVALUEPROP MAATR RVALUE
   97      | LVALUEPROP MEATR RVALUE
   98      | LVALUE INCREM
   99      | LVALUE DECREM

  100 FINAL: NUM
  101      | STRING
  102      | '(' RVALUE ')'
  103      | LVALUE
  104      | LVALUEPROP
  105      | TRUE
  106      | FALSE

  107 ARGS: RVALUE ',' ARGS
  108     | RVALUE

  109 $@10: %empty

  110 $@11: %empty

  111 BLOCO: '{' $@10 CMDs $@11 '}'
  112      | '{' '}'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 68
    '(' (40) 20 23 26 27 28 29 30 48 51 56 72 73 102
    ')' (41) 20 23 26 27 28 29 30 48 51 55 56 72 73 102
    '*' (42) 64
    '+' (43) 65 69
    ',' (44) 24 42 44 78 80 83 85 88 90 107
    '-' (45) 66 70
    '.' (46) 32
    '/' (47) 67
    ':' (58) 42 43
    ';' (59) 6 12 13 14 15 17 29 30
    '<' (60) 62
    '=' (61) 78 79 83 84 88 89 92 95
    '>' (62) 63
    '[' (91) 33 38 39
    ']' (93) 33 38 39
    '^' (94) 61
    '{' (123) 20 23 36 37 48 51 111 112
    '}' (125) 20 23 36 37 48 51 111 112
    error (256)
    ID (258) 20 23 24 25 31 32 42 43 53 78 79 80 81 83 84 85 86 88 89 90 91
    NUM (259) 100
    MAIG (260) 58
    MEIG (261) 57
    IG (262) 59
    DIF (263) 60
    MAATR (264) 93 96
    MEATR (265) 94 97
    INCREM (266) 98
    DECREM (267) 99
    STRING (268) 101
    COMENTARIO (269)
    LET (270) 77
    CONST (271) 87
    VAR (272) 82
    IF (273) 26 27
    ELSE (274) 27
    WHILE (275) 28
    FOR (276) 29 30
    FUNCTION (277) 20 23 48 51
    RETURN (278) 17
    ASM (279) 14
    TRUE (280) 105
    FALSE (281) 106
    SETA (282) 52
    ABRE_PAR_SETA (283) 55


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    S (49)
        on left: 1
        on right: 0
    CMDz (50)
        on left: 2 3
        on right: 1 2 20 23 48 51
    CMDs (51)
        on left: 4 5
        on right: 4 111
    CMD (52)
        on left: 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 4 5 26 27 28 29 30
    CMD_RETURN (53)
        on left: 17
        on right: 11
    CMD_FUNCTION (54)
        on left: 20 23
        on right: 10
    $@1 (55)
        on left: 18
        on right: 20
    $@2 (56)
        on left: 19
        on right: 20
    $@3 (57)
        on left: 21
        on right: 23
    $@4 (58)
        on left: 22
        on right: 23
    PARAMS (59)
        on left: 24 25
        on right: 23 24 51 55
    CMD_IF (60)
        on left: 26 27
        on right: 7
    CMD_WHILE (61)
        on left: 28
        on right: 9
    CMD_FOR (62)
        on left: 29 30
        on right: 8
    LVALUE (63)
        on left: 31
        on right: 92 93 94 98 99 103
    LVALUEPROP (64)
        on left: 32 33
        on right: 95 96 97 104
    RVALUE (65)
        on left: 34 35 36 37 38 39 40 41
        on right: 17 26 27 28 29 30 33 42 43 44 45 78 79 83 84 88 89 92 93 94 95 96 97 102 107 108
    LIT_DECLS (66)
        on left: 42 43
        on right: 37 42
    ARRAY_DECLS (67)
        on left: 44 45
        on right: 39 44
    ANONYMOUS_FUNCTION (68)
        on left: 48 51
        on right: 40
    $@5 (69)
        on left: 46
        on right: 48
    $@6 (70)
        on left: 47
        on right: 48
    $@7 (71)
        on left: 49
        on right: 51
    $@8 (72)
        on left: 50
        on right: 51
    ARROW_FUNCTION (73)
        on left: 52
        on right: 41
    ARROW_PARAMS (74)
        on left: 53 55 56
        on right: 52
    $@9 (75)
        on left: 54
        on right: 55
    EXPR (76)
        on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
        on right: 13 14 32 33 35 52 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    CMD_DECL (77)
        on left: 74 75 76
        on right: 6 29
    CMD_LET (78)
        on left: 77
        on right: 74
    MULTI_LET (79)
        on left: 78 79 80 81
        on right: 77 78 80
    CMD_VAR (80)
        on left: 82
        on right: 75
    MULTI_VAR (81)
        on left: 83 84 85 86
        on right: 82 83 85
    CMD_CONST (82)
        on left: 87
        on right: 76
    MULTI_CONST (83)
        on left: 88 89 90 91
        on right: 87 88 90
    ATRIB (84)
        on left: 92 93 94 95 96 97 98 99
        on right: 15 29 30 34
    FINAL (85)
        on left: 100 101 102 103 104 105 106
        on right: 71 72 73
    ARGS (86)
        on left: 107 108
        on right: 73 107
    BLOCO (87)
        on left: 111 112
        on right: 16
    $@10 (88)
        on left: 109
        on right: 111
    $@11 (89)
        on left: 110
        on right: 111


State 0

    0 $accept: . S $end

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    S             go to state 19
    CMDz          go to state 20
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 1

   31 LVALUE: ID .

    $default  reduce using rule 31 (LVALUE)


State 2

  100 FINAL: NUM .

    $default  reduce using rule 100 (FINAL)


State 3

  101 FINAL: STRING .

    $default  reduce using rule 101 (FINAL)


State 4

   77 CMD_LET: LET . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 38


State 5

   87 CMD_CONST: CONST . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 40


State 6

   82 CMD_VAR: VAR . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 42


State 7

   26 CMD_IF: IF . '(' RVALUE ')' CMD
   27       | IF . '(' RVALUE ')' CMD ELSE CMD

    '('  shift, and go to state 43


State 8

   28 CMD_WHILE: WHILE . '(' RVALUE ')' CMD

    '('  shift, and go to state 44


State 9

   29 CMD_FOR: FOR . '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   30        | FOR . '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD

    '('  shift, and go to state 45


State 10

   20 CMD_FUNCTION: FUNCTION . ID '(' $@1 ')' '{' CMDz '}' $@2
   23             | FUNCTION . ID '(' $@3 PARAMS ')' '{' CMDz '}' $@4

    ID  shift, and go to state 46


State 11

   17 CMD_RETURN: RETURN . RVALUE ';'

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 53
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 12

  105 FINAL: TRUE .

    $default  reduce using rule 105 (FINAL)


State 13

  106 FINAL: FALSE .

    $default  reduce using rule 106 (FINAL)


State 14

   69 EXPR: '+' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 61
    FINAL       go to state 35


State 15

   70 EXPR: '-' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 62
    FINAL       go to state 35


State 16

   12 CMD: ';' .

    $default  reduce using rule 12 (CMD)


State 17

  102 FINAL: '(' . RVALUE ')'

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 63
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 18

  111 BLOCO: '{' . $@10 CMDs $@11 '}'
  112      | '{' . '}'

    '}'  shift, and go to state 64

    $default  reduce using rule 109 ($@10)

    $@10  go to state 65


State 19

    0 $accept: S . $end

    $end  shift, and go to state 66


State 20

    1 S: CMDz .

    $default  reduce using rule 1 (S)


State 21

    2 CMDz: CMD . CMDz

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 67
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 22

   11 CMD: CMD_RETURN .

    $default  reduce using rule 11 (CMD)


State 23

   10 CMD: CMD_FUNCTION .

    $default  reduce using rule 10 (CMD)


State 24

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


State 25

    9 CMD: CMD_WHILE .

    $default  reduce using rule 9 (CMD)


State 26

    8 CMD: CMD_FOR .

    $default  reduce using rule 8 (CMD)


State 27

   92 ATRIB: LVALUE . '=' RVALUE
   93      | LVALUE . MAATR RVALUE
   94      | LVALUE . MEATR RVALUE
   98      | LVALUE . INCREM
   99      | LVALUE . DECREM
  103 FINAL: LVALUE .

    MAATR   shift, and go to state 68
    MEATR   shift, and go to state 69
    INCREM  shift, and go to state 70
    DECREM  shift, and go to state 71
    '='     shift, and go to state 72

    $default  reduce using rule 103 (FINAL)


State 28

   95 ATRIB: LVALUEPROP . '=' RVALUE
   96      | LVALUEPROP . MAATR RVALUE
   97      | LVALUEPROP . MEATR RVALUE
  104 FINAL: LVALUEPROP .

    MAATR  shift, and go to state 73
    MEATR  shift, and go to state 74
    '='    shift, and go to state 75

    $default  reduce using rule 104 (FINAL)


State 29

   13 CMD: EXPR . ';'
   14    | EXPR . ASM ';'
   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    MAIG  shift, and go to state 76
    MEIG  shift, and go to state 77
    IG    shift, and go to state 78
    DIF   shift, and go to state 79
    ASM   shift, and go to state 80
    '<'   shift, and go to state 81
    '>'   shift, and go to state 82
    '+'   shift, and go to state 83
    '-'   shift, and go to state 84
    '*'   shift, and go to state 85
    '/'   shift, and go to state 86
    '%'   shift, and go to state 87
    '^'   shift, and go to state 88
    '.'   shift, and go to state 89
    '['   shift, and go to state 90
    ';'   shift, and go to state 91


State 30

    6 CMD: CMD_DECL . ';'

    ';'  shift, and go to state 92


State 31

   74 CMD_DECL: CMD_LET .

    $default  reduce using rule 74 (CMD_DECL)


State 32

   75 CMD_DECL: CMD_VAR .

    $default  reduce using rule 75 (CMD_DECL)


State 33

   76 CMD_DECL: CMD_CONST .

    $default  reduce using rule 76 (CMD_DECL)


State 34

   15 CMD: ATRIB . ';'

    ';'  shift, and go to state 93


State 35

   71 EXPR: FINAL .
   72     | FINAL . '(' ')'
   73     | FINAL . '(' ARGS ')'

    '('  shift, and go to state 94

    $default  reduce using rule 71 (EXPR)


State 36

   16 CMD: BLOCO .

    $default  reduce using rule 16 (CMD)


State 37

   78 MULTI_LET: ID . '=' RVALUE ',' MULTI_LET
   79          | ID . '=' RVALUE
   80          | ID . ',' MULTI_LET
   81          | ID .

    '='  shift, and go to state 95
    ','  shift, and go to state 96

    $default  reduce using rule 81 (MULTI_LET)


State 38

   77 CMD_LET: LET MULTI_LET .

    $default  reduce using rule 77 (CMD_LET)


State 39

   88 MULTI_CONST: ID . '=' RVALUE ',' MULTI_CONST
   89            | ID . '=' RVALUE
   90            | ID . ',' MULTI_CONST
   91            | ID .

    '='  shift, and go to state 97
    ','  shift, and go to state 98

    $default  reduce using rule 91 (MULTI_CONST)


State 40

   87 CMD_CONST: CONST MULTI_CONST .

    $default  reduce using rule 87 (CMD_CONST)


State 41

   83 MULTI_VAR: ID . '=' RVALUE ',' MULTI_VAR
   84          | ID . '=' RVALUE
   85          | ID . ',' MULTI_VAR
   86          | ID .

    '='  shift, and go to state 99
    ','  shift, and go to state 100

    $default  reduce using rule 86 (MULTI_VAR)


State 42

   82 CMD_VAR: VAR MULTI_VAR .

    $default  reduce using rule 82 (CMD_VAR)


State 43

   26 CMD_IF: IF '(' . RVALUE ')' CMD
   27       | IF '(' . RVALUE ')' CMD ELSE CMD

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 101
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 44

   28 CMD_WHILE: WHILE '(' . RVALUE ')' CMD

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 102
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 45

   29 CMD_FOR: FOR '(' . CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   30        | FOR '(' . ATRIB ';' RVALUE ';' ATRIB ')' CMD

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    LET     shift, and go to state 4
    CONST   shift, and go to state 5
    VAR     shift, and go to state 6
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 27
    LVALUEPROP  go to state 28
    EXPR        go to state 103
    CMD_DECL    go to state 104
    CMD_LET     go to state 31
    CMD_VAR     go to state 32
    CMD_CONST   go to state 33
    ATRIB       go to state 105
    FINAL       go to state 35


State 46

   20 CMD_FUNCTION: FUNCTION ID . '(' $@1 ')' '{' CMDz '}' $@2
   23             | FUNCTION ID . '(' $@3 PARAMS ')' '{' CMDz '}' $@4

    '('  shift, and go to state 106


State 47

   31 LVALUE: ID .
   53 ARROW_PARAMS: ID .

    SETA      reduce using rule 53 (ARROW_PARAMS)
    $default  reduce using rule 31 (LVALUE)


State 48

   48 ANONYMOUS_FUNCTION: FUNCTION . '(' $@5 ')' '{' CMDz '}' $@6
   51                   | FUNCTION . '(' $@7 PARAMS ')' '{' CMDz '}' $@8

    '('  shift, and go to state 107


State 49

   55 ARROW_PARAMS: ABRE_PAR_SETA . $@9 PARAMS ')'

    $default  reduce using rule 54 ($@9)

    $@9  go to state 108


State 50

   38 RVALUE: '[' . ']'
   39       | '[' . ARRAY_DECLS ']'

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52
    ']'            shift, and go to state 109

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 110
    ARRAY_DECLS         go to state 111
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 51

   56 ARROW_PARAMS: '(' . ')'
  102 FINAL: '(' . RVALUE ')'

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    ')'            shift, and go to state 112
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 63
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 52

   36 RVALUE: '{' . '}'
   37       | '{' . LIT_DECLS '}'

    ID   shift, and go to state 113
    '}'  shift, and go to state 114

    LIT_DECLS  go to state 115


State 53

   17 CMD_RETURN: RETURN RVALUE . ';'

    ';'  shift, and go to state 116


State 54

   40 RVALUE: ANONYMOUS_FUNCTION .

    $default  reduce using rule 40 (RVALUE)


State 55

   41 RVALUE: ARROW_FUNCTION .

    $default  reduce using rule 41 (RVALUE)


State 56

   52 ARROW_FUNCTION: ARROW_PARAMS . SETA EXPR

    SETA  shift, and go to state 117


State 57

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   35 RVALUE: EXPR .
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    MAIG  shift, and go to state 76
    MEIG  shift, and go to state 77
    IG    shift, and go to state 78
    DIF   shift, and go to state 79
    '<'   shift, and go to state 81
    '>'   shift, and go to state 82
    '+'   shift, and go to state 83
    '-'   shift, and go to state 84
    '*'   shift, and go to state 85
    '/'   shift, and go to state 86
    '%'   shift, and go to state 87
    '^'   shift, and go to state 88
    '.'   shift, and go to state 89
    '['   shift, and go to state 90

    $default  reduce using rule 35 (RVALUE)


State 58

   34 RVALUE: ATRIB .

    $default  reduce using rule 34 (RVALUE)


State 59

  103 FINAL: LVALUE .

    $default  reduce using rule 103 (FINAL)


State 60

  104 FINAL: LVALUEPROP .

    $default  reduce using rule 104 (FINAL)


State 61

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR
   69     | '+' EXPR .

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 69 (EXPR)


State 62

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR
   70     | '-' EXPR .

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 70 (EXPR)


State 63

  102 FINAL: '(' RVALUE . ')'

    ')'  shift, and go to state 118


State 64

  112 BLOCO: '{' '}' .

    $default  reduce using rule 112 (BLOCO)


State 65

  111 BLOCO: '{' $@10 . CMDs $@11 '}'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMDs          go to state 119
    CMD           go to state 120
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 66

    0 $accept: S $end .

    $default  accept


State 67

    2 CMDz: CMD CMDz .

    $default  reduce using rule 2 (CMDz)


State 68

   93 ATRIB: LVALUE MAATR . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 121
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 69

   94 ATRIB: LVALUE MEATR . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 122
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 70

   98 ATRIB: LVALUE INCREM .

    $default  reduce using rule 98 (ATRIB)


State 71

   99 ATRIB: LVALUE DECREM .

    $default  reduce using rule 99 (ATRIB)


State 72

   92 ATRIB: LVALUE '=' . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 123
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 73

   96 ATRIB: LVALUEPROP MAATR . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 124
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 74

   97 ATRIB: LVALUEPROP MEATR . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 125
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 75

   95 ATRIB: LVALUEPROP '=' . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 126
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 76

   58 EXPR: EXPR MAIG . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 127
    FINAL       go to state 35


State 77

   57 EXPR: EXPR MEIG . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 128
    FINAL       go to state 35


State 78

   59 EXPR: EXPR IG . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 129
    FINAL       go to state 35


State 79

   60 EXPR: EXPR DIF . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 130
    FINAL       go to state 35


State 80

   14 CMD: EXPR ASM . ';'

    ';'  shift, and go to state 131


State 81

   62 EXPR: EXPR '<' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 132
    FINAL       go to state 35


State 82

   63 EXPR: EXPR '>' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 133
    FINAL       go to state 35


State 83

   65 EXPR: EXPR '+' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 134
    FINAL       go to state 35


State 84

   66 EXPR: EXPR '-' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 135
    FINAL       go to state 35


State 85

   64 EXPR: EXPR '*' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 136
    FINAL       go to state 35


State 86

   67 EXPR: EXPR '/' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 137
    FINAL       go to state 35


State 87

   68 EXPR: EXPR '%' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 138
    FINAL       go to state 35


State 88

   61 EXPR: EXPR '^' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 139
    FINAL       go to state 35


State 89

   32 LVALUEPROP: EXPR '.' . ID

    ID  shift, and go to state 140


State 90

   33 LVALUEPROP: EXPR '[' . RVALUE ']'

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 141
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 91

   13 CMD: EXPR ';' .

    $default  reduce using rule 13 (CMD)


State 92

    6 CMD: CMD_DECL ';' .

    $default  reduce using rule 6 (CMD)


State 93

   15 CMD: ATRIB ';' .

    $default  reduce using rule 15 (CMD)


State 94

   72 EXPR: FINAL '(' . ')'
   73     | FINAL '(' . ARGS ')'

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    ')'            shift, and go to state 142
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 143
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35
    ARGS                go to state 144


State 95

   78 MULTI_LET: ID '=' . RVALUE ',' MULTI_LET
   79          | ID '=' . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 145
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 96

   80 MULTI_LET: ID ',' . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 146


State 97

   88 MULTI_CONST: ID '=' . RVALUE ',' MULTI_CONST
   89            | ID '=' . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 147
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 98

   90 MULTI_CONST: ID ',' . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 148


State 99

   83 MULTI_VAR: ID '=' . RVALUE ',' MULTI_VAR
   84          | ID '=' . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 149
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 100

   85 MULTI_VAR: ID ',' . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 150


State 101

   26 CMD_IF: IF '(' RVALUE . ')' CMD
   27       | IF '(' RVALUE . ')' CMD ELSE CMD

    ')'  shift, and go to state 151


State 102

   28 CMD_WHILE: WHILE '(' RVALUE . ')' CMD

    ')'  shift, and go to state 152


State 103

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    MAIG  shift, and go to state 76
    MEIG  shift, and go to state 77
    IG    shift, and go to state 78
    DIF   shift, and go to state 79
    '<'   shift, and go to state 81
    '>'   shift, and go to state 82
    '+'   shift, and go to state 83
    '-'   shift, and go to state 84
    '*'   shift, and go to state 85
    '/'   shift, and go to state 86
    '%'   shift, and go to state 87
    '^'   shift, and go to state 88
    '.'   shift, and go to state 89
    '['   shift, and go to state 90


State 104

   29 CMD_FOR: FOR '(' CMD_DECL . ';' RVALUE ';' ATRIB ')' CMD

    ';'  shift, and go to state 153


State 105

   30 CMD_FOR: FOR '(' ATRIB . ';' RVALUE ';' ATRIB ')' CMD

    ';'  shift, and go to state 154


State 106

   20 CMD_FUNCTION: FUNCTION ID '(' . $@1 ')' '{' CMDz '}' $@2
   23             | FUNCTION ID '(' . $@3 PARAMS ')' '{' CMDz '}' $@4

    ID        reduce using rule 21 ($@3)
    $default  reduce using rule 18 ($@1)

    $@1  go to state 155
    $@3  go to state 156


State 107

   48 ANONYMOUS_FUNCTION: FUNCTION '(' . $@5 ')' '{' CMDz '}' $@6
   51                   | FUNCTION '(' . $@7 PARAMS ')' '{' CMDz '}' $@8

    ID        reduce using rule 49 ($@7)
    $default  reduce using rule 46 ($@5)

    $@5  go to state 157
    $@7  go to state 158


State 108

   55 ARROW_PARAMS: ABRE_PAR_SETA $@9 . PARAMS ')'

    ID  shift, and go to state 159

    PARAMS  go to state 160


State 109

   38 RVALUE: '[' ']' .

    $default  reduce using rule 38 (RVALUE)


State 110

   45 ARRAY_DECLS: RVALUE .

    $default  reduce using rule 45 (ARRAY_DECLS)


State 111

   39 RVALUE: '[' ARRAY_DECLS . ']'
   44 ARRAY_DECLS: ARRAY_DECLS . ',' RVALUE

    ','  shift, and go to state 161
    ']'  shift, and go to state 162


State 112

   56 ARROW_PARAMS: '(' ')' .

    $default  reduce using rule 56 (ARROW_PARAMS)


State 113

   42 LIT_DECLS: ID . ':' RVALUE ',' LIT_DECLS
   43          | ID . ':' RVALUE

    ':'  shift, and go to state 163


State 114

   36 RVALUE: '{' '}' .

    $default  reduce using rule 36 (RVALUE)


State 115

   37 RVALUE: '{' LIT_DECLS . '}'

    '}'  shift, and go to state 164


State 116

   17 CMD_RETURN: RETURN RVALUE ';' .

    $default  reduce using rule 17 (CMD_RETURN)


State 117

   52 ARROW_FUNCTION: ARROW_PARAMS SETA . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 59
    LVALUEPROP  go to state 60
    EXPR        go to state 165
    FINAL       go to state 35


State 118

  102 FINAL: '(' RVALUE ')' .

    $default  reduce using rule 102 (FINAL)


State 119

  111 BLOCO: '{' $@10 CMDs . $@11 '}'

    $default  reduce using rule 110 ($@11)

    $@11  go to state 166


State 120

    4 CMDs: CMD . CMDs
    5     | CMD .

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 5 (CMDs)

    CMDs          go to state 167
    CMD           go to state 120
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 121

   93 ATRIB: LVALUE MAATR RVALUE .

    $default  reduce using rule 93 (ATRIB)


State 122

   94 ATRIB: LVALUE MEATR RVALUE .

    $default  reduce using rule 94 (ATRIB)


State 123

   92 ATRIB: LVALUE '=' RVALUE .

    $default  reduce using rule 92 (ATRIB)


State 124

   96 ATRIB: LVALUEPROP MAATR RVALUE .

    $default  reduce using rule 96 (ATRIB)


State 125

   97 ATRIB: LVALUEPROP MEATR RVALUE .

    $default  reduce using rule 97 (ATRIB)


State 126

   95 ATRIB: LVALUEPROP '=' RVALUE .

    $default  reduce using rule 95 (ATRIB)


State 127

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   58     | EXPR MAIG EXPR .
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 58 (EXPR)


State 128

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   57     | EXPR MEIG EXPR .
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 57 (EXPR)


State 129

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   59     | EXPR IG EXPR .
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 59 (EXPR)


State 130

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   60     | EXPR DIF EXPR .
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 60 (EXPR)


State 131

   14 CMD: EXPR ASM ';' .

    $default  reduce using rule 14 (CMD)


State 132

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   62     | EXPR '<' EXPR .
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 62 (EXPR)


State 133

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   63     | EXPR '>' EXPR .
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 63 (EXPR)


State 134

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   65     | EXPR '+' EXPR .
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 65 (EXPR)


State 135

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   66     | EXPR '-' EXPR .
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86
    '%'  shift, and go to state 87
    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 66 (EXPR)


State 136

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   64     | EXPR '*' EXPR .
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 64 (EXPR)


State 137

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   67     | EXPR '/' EXPR .
   68     | EXPR . '%' EXPR

    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 67 (EXPR)


State 138

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR
   68     | EXPR '%' EXPR .

    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 68 (EXPR)


State 139

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   61     | EXPR '^' EXPR .
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    '^'  shift, and go to state 88
    '.'  shift, and go to state 89
    '['  shift, and go to state 90

    $default  reduce using rule 61 (EXPR)


State 140

   32 LVALUEPROP: EXPR '.' ID .

    $default  reduce using rule 32 (LVALUEPROP)


State 141

   33 LVALUEPROP: EXPR '[' RVALUE . ']'

    ']'  shift, and go to state 168


State 142

   72 EXPR: FINAL '(' ')' .

    $default  reduce using rule 72 (EXPR)


State 143

  107 ARGS: RVALUE . ',' ARGS
  108     | RVALUE .

    ','  shift, and go to state 169

    $default  reduce using rule 108 (ARGS)


State 144

   73 EXPR: FINAL '(' ARGS . ')'

    ')'  shift, and go to state 170


State 145

   78 MULTI_LET: ID '=' RVALUE . ',' MULTI_LET
   79          | ID '=' RVALUE .

    ','  shift, and go to state 171

    $default  reduce using rule 79 (MULTI_LET)


State 146

   80 MULTI_LET: ID ',' MULTI_LET .

    $default  reduce using rule 80 (MULTI_LET)


State 147

   88 MULTI_CONST: ID '=' RVALUE . ',' MULTI_CONST
   89            | ID '=' RVALUE .

    ','  shift, and go to state 172

    $default  reduce using rule 89 (MULTI_CONST)


State 148

   90 MULTI_CONST: ID ',' MULTI_CONST .

    $default  reduce using rule 90 (MULTI_CONST)


State 149

   83 MULTI_VAR: ID '=' RVALUE . ',' MULTI_VAR
   84          | ID '=' RVALUE .

    ','  shift, and go to state 173

    $default  reduce using rule 84 (MULTI_VAR)


State 150

   85 MULTI_VAR: ID ',' MULTI_VAR .

    $default  reduce using rule 85 (MULTI_VAR)


State 151

   26 CMD_IF: IF '(' RVALUE ')' . CMD
   27       | IF '(' RVALUE ')' . CMD ELSE CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 174
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 152

   28 CMD_WHILE: WHILE '(' RVALUE ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 175
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 153

   29 CMD_FOR: FOR '(' CMD_DECL ';' . RVALUE ';' ATRIB ')' CMD

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 176
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 154

   30 CMD_FOR: FOR '(' ATRIB ';' . RVALUE ';' ATRIB ')' CMD

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 177
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 155

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 . ')' '{' CMDz '}' $@2

    ')'  shift, and go to state 178


State 156

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 . PARAMS ')' '{' CMDz '}' $@4

    ID  shift, and go to state 159

    PARAMS  go to state 179


State 157

   48 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 . ')' '{' CMDz '}' $@6

    ')'  shift, and go to state 180


State 158

   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 . PARAMS ')' '{' CMDz '}' $@8

    ID  shift, and go to state 159

    PARAMS  go to state 181


State 159

   25 PARAMS: ID .

    $default  reduce using rule 25 (PARAMS)


State 160

   24 PARAMS: PARAMS . ',' ID
   55 ARROW_PARAMS: ABRE_PAR_SETA $@9 PARAMS . ')'

    ')'  shift, and go to state 182
    ','  shift, and go to state 183


State 161

   44 ARRAY_DECLS: ARRAY_DECLS ',' . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 184
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 162

   39 RVALUE: '[' ARRAY_DECLS ']' .

    $default  reduce using rule 39 (RVALUE)


State 163

   42 LIT_DECLS: ID ':' . RVALUE ',' LIT_DECLS
   43          | ID ':' . RVALUE

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 185
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35


State 164

   37 RVALUE: '{' LIT_DECLS '}' .

    $default  reduce using rule 37 (RVALUE)


State 165

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   52 ARROW_FUNCTION: ARROW_PARAMS SETA EXPR .
   57 EXPR: EXPR . MEIG EXPR
   58     | EXPR . MAIG EXPR
   59     | EXPR . IG EXPR
   60     | EXPR . DIF EXPR
   61     | EXPR . '^' EXPR
   62     | EXPR . '<' EXPR
   63     | EXPR . '>' EXPR
   64     | EXPR . '*' EXPR
   65     | EXPR . '+' EXPR
   66     | EXPR . '-' EXPR
   67     | EXPR . '/' EXPR
   68     | EXPR . '%' EXPR

    MAIG  shift, and go to state 76
    MEIG  shift, and go to state 77
    IG    shift, and go to state 78
    DIF   shift, and go to state 79
    '<'   shift, and go to state 81
    '>'   shift, and go to state 82
    '+'   shift, and go to state 83
    '-'   shift, and go to state 84
    '*'   shift, and go to state 85
    '/'   shift, and go to state 86
    '%'   shift, and go to state 87
    '^'   shift, and go to state 88
    '.'   shift, and go to state 89
    '['   shift, and go to state 90

    $default  reduce using rule 52 (ARROW_FUNCTION)


State 166

  111 BLOCO: '{' $@10 CMDs $@11 . '}'

    '}'  shift, and go to state 186


State 167

    4 CMDs: CMD CMDs .

    $default  reduce using rule 4 (CMDs)


State 168

   33 LVALUEPROP: EXPR '[' RVALUE ']' .

    $default  reduce using rule 33 (LVALUEPROP)


State 169

  107 ARGS: RVALUE ',' . ARGS

    ID             shift, and go to state 47
    NUM            shift, and go to state 2
    STRING         shift, and go to state 3
    FUNCTION       shift, and go to state 48
    TRUE           shift, and go to state 12
    FALSE          shift, and go to state 13
    ABRE_PAR_SETA  shift, and go to state 49
    '+'            shift, and go to state 14
    '-'            shift, and go to state 15
    '['            shift, and go to state 50
    '('            shift, and go to state 51
    '{'            shift, and go to state 52

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 143
    ANONYMOUS_FUNCTION  go to state 54
    ARROW_FUNCTION      go to state 55
    ARROW_PARAMS        go to state 56
    EXPR                go to state 57
    ATRIB               go to state 58
    FINAL               go to state 35
    ARGS                go to state 187


State 170

   73 EXPR: FINAL '(' ARGS ')' .

    $default  reduce using rule 73 (EXPR)


State 171

   78 MULTI_LET: ID '=' RVALUE ',' . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 188


State 172

   88 MULTI_CONST: ID '=' RVALUE ',' . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 189


State 173

   83 MULTI_VAR: ID '=' RVALUE ',' . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 190


State 174

   26 CMD_IF: IF '(' RVALUE ')' CMD .
   27       | IF '(' RVALUE ')' CMD . ELSE CMD

    ELSE  shift, and go to state 191

    ELSE      [reduce using rule 26 (CMD_IF)]
    $default  reduce using rule 26 (CMD_IF)


State 175

   28 CMD_WHILE: WHILE '(' RVALUE ')' CMD .

    $default  reduce using rule 28 (CMD_WHILE)


State 176

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE . ';' ATRIB ')' CMD

    ';'  shift, and go to state 192


State 177

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE . ';' ATRIB ')' CMD

    ';'  shift, and go to state 193


State 178

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' . '{' CMDz '}' $@2

    '{'  shift, and go to state 194


State 179

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS . ')' '{' CMDz '}' $@4
   24 PARAMS: PARAMS . ',' ID

    ')'  shift, and go to state 195
    ','  shift, and go to state 183


State 180

   48 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' . '{' CMDz '}' $@6

    '{'  shift, and go to state 196


State 181

   24 PARAMS: PARAMS . ',' ID
   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS . ')' '{' CMDz '}' $@8

    ')'  shift, and go to state 197
    ','  shift, and go to state 183


State 182

   55 ARROW_PARAMS: ABRE_PAR_SETA $@9 PARAMS ')' .

    $default  reduce using rule 55 (ARROW_PARAMS)


State 183

   24 PARAMS: PARAMS ',' . ID

    ID  shift, and go to state 198


State 184

   44 ARRAY_DECLS: ARRAY_DECLS ',' RVALUE .

    $default  reduce using rule 44 (ARRAY_DECLS)


State 185

   42 LIT_DECLS: ID ':' RVALUE . ',' LIT_DECLS
   43          | ID ':' RVALUE .

    ','  shift, and go to state 199

    $default  reduce using rule 43 (LIT_DECLS)


State 186

  111 BLOCO: '{' $@10 CMDs $@11 '}' .

    $default  reduce using rule 111 (BLOCO)


State 187

  107 ARGS: RVALUE ',' ARGS .

    $default  reduce using rule 107 (ARGS)


State 188

   78 MULTI_LET: ID '=' RVALUE ',' MULTI_LET .

    $default  reduce using rule 78 (MULTI_LET)


State 189

   88 MULTI_CONST: ID '=' RVALUE ',' MULTI_CONST .

    $default  reduce using rule 88 (MULTI_CONST)


State 190

   83 MULTI_VAR: ID '=' RVALUE ',' MULTI_VAR .

    $default  reduce using rule 83 (MULTI_VAR)


State 191

   27 CMD_IF: IF '(' RVALUE ')' CMD ELSE . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 200
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 192

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' . ATRIB ')' CMD

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 27
    LVALUEPROP  go to state 28
    EXPR        go to state 103
    ATRIB       go to state 201
    FINAL       go to state 35


State 193

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' . ATRIB ')' CMD

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 27
    LVALUEPROP  go to state 28
    EXPR        go to state 103
    ATRIB       go to state 202
    FINAL       go to state 35


State 194

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' . CMDz '}' $@2

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 203
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 195

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' . '{' CMDz '}' $@4

    '{'  shift, and go to state 204


State 196

   48 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' . CMDz '}' $@6

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 205
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 197

   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' . '{' CMDz '}' $@8

    '{'  shift, and go to state 206


State 198

   24 PARAMS: PARAMS ',' ID .

    $default  reduce using rule 24 (PARAMS)


State 199

   42 LIT_DECLS: ID ':' RVALUE ',' . LIT_DECLS

    ID  shift, and go to state 113

    LIT_DECLS  go to state 207


State 200

   27 CMD_IF: IF '(' RVALUE ')' CMD ELSE CMD .

    $default  reduce using rule 27 (CMD_IF)


State 201

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB . ')' CMD

    ')'  shift, and go to state 208


State 202

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB . ')' CMD

    ')'  shift, and go to state 209


State 203

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz . '}' $@2

    '}'  shift, and go to state 210


State 204

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' . CMDz '}' $@4

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 211
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 205

   48 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz . '}' $@6

    '}'  shift, and go to state 212


State 206

   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' . CMDz '}' $@8

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 213
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 207

   42 LIT_DECLS: ID ':' RVALUE ',' LIT_DECLS .

    $default  reduce using rule 42 (LIT_DECLS)


State 208

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 214
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 209

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 215
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 210

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz '}' . $@2

    $default  reduce using rule 19 ($@2)

    $@2  go to state 216


State 211

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz . '}' $@4

    '}'  shift, and go to state 217


State 212

   48 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz '}' . $@6

    $default  reduce using rule 47 ($@6)

    $@6  go to state 218


State 213

   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz . '}' $@8

    '}'  shift, and go to state 219


State 214

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD .

    $default  reduce using rule 29 (CMD_FOR)


State 215

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD .

    $default  reduce using rule 30 (CMD_FOR)


State 216

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz '}' $@2 .

    $default  reduce using rule 20 (CMD_FUNCTION)


State 217

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz '}' . $@4

    $default  reduce using rule 22 ($@4)

    $@4  go to state 220


State 218

   48 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz '}' $@6 .

    $default  reduce using rule 48 (ANONYMOUS_FUNCTION)


State 219

   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz '}' . $@8

    $default  reduce using rule 50 ($@8)

    $@8  go to state 221


State 220

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz '}' $@4 .

    $default  reduce using rule 23 (CMD_FUNCTION)


State 221

   51 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz '}' $@8 .

    $default  reduce using rule 51 (ANONYMOUS_FUNCTION)
