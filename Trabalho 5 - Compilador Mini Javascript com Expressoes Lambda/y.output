Terminals unused in grammar

    COMENTARIO


State 163 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDz

    2 CMDz: CMD CMDz
    3     | %empty

    4 CMDs: CMD CMDs
    5     | CMD

    6 CMD: CMD_DECL ';'
    7    | CMD_IF
    8    | CMD_FOR
    9    | CMD_WHILE
   10    | CMD_FUNCTION
   11    | CMD_RETURN
   12    | ';'
   13    | EXPR ';'
   14    | EXPR ASM ';'
   15    | ATRIB ';'
   16    | BLOCO

   17 CMD_RETURN: RETURN RVALUE ';'

   18 $@1: %empty

   19 $@2: %empty

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz '}' $@2

   21 $@3: %empty

   22 $@4: %empty

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz '}' $@4

   24 PARAMS: PARAMS ',' ID
   25       | ID

   26 CMD_IF: IF '(' RVALUE ')' CMD
   27       | IF '(' RVALUE ')' CMD ELSE CMD

   28 CMD_WHILE: WHILE '(' RVALUE ')' CMD

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   30        | FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD

   31 LVALUE: ID

   32 LVALUEPROP: EXPR '.' ID
   33           | EXPR '[' RVALUE ']'

   34 RVALUE: ATRIB
   35       | EXPR
   36       | '{' '}'
   37       | '{' LIT_DECLS '}'
   38       | '[' ']'
   39       | '[' ARRAY_DECLS ']'
   40       | ANONYMOUS_FUNCTION

   41 LIT_DECLS: ID ':' RVALUE ',' LIT_DECLS
   42          | ID ':' RVALUE

   43 ARRAY_DECLS: ARRAY_DECLS ',' RVALUE
   44            | RVALUE

   45 $@5: %empty

   46 $@6: %empty

   47 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz '}' $@6

   48 $@7: %empty

   49 $@8: %empty

   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz '}' $@8

   51 EXPR: EXPR MEIG EXPR
   52     | EXPR MAIG EXPR
   53     | EXPR IG EXPR
   54     | EXPR DIF EXPR
   55     | EXPR '^' EXPR
   56     | EXPR '<' EXPR
   57     | EXPR '>' EXPR
   58     | EXPR '*' EXPR
   59     | EXPR '+' EXPR
   60     | EXPR '-' EXPR
   61     | EXPR '/' EXPR
   62     | EXPR '%' EXPR
   63     | '+' EXPR
   64     | '-' EXPR
   65     | FINAL
   66     | FINAL '(' ')'
   67     | FINAL '(' ARGS ')'

   68 CMD_DECL: CMD_LET
   69         | CMD_VAR
   70         | CMD_CONST

   71 CMD_LET: LET MULTI_LET

   72 MULTI_LET: ID '=' RVALUE ',' MULTI_LET
   73          | ID '=' RVALUE
   74          | ID ',' MULTI_LET
   75          | ID

   76 CMD_VAR: VAR MULTI_VAR

   77 MULTI_VAR: ID '=' RVALUE ',' MULTI_VAR
   78          | ID '=' RVALUE
   79          | ID ',' MULTI_VAR
   80          | ID

   81 CMD_CONST: CONST MULTI_CONST

   82 MULTI_CONST: ID '=' RVALUE ',' MULTI_CONST
   83            | ID '=' RVALUE
   84            | ID ',' MULTI_CONST
   85            | ID

   86 ATRIB: LVALUE '=' RVALUE
   87      | LVALUE MAATR RVALUE
   88      | LVALUE MEATR RVALUE
   89      | LVALUEPROP '=' RVALUE
   90      | LVALUEPROP MAATR RVALUE
   91      | LVALUEPROP MEATR RVALUE
   92      | LVALUE INCREM
   93      | LVALUE DECREM

   94 FINAL: NUM
   95      | STRING
   96      | '(' RVALUE ')'
   97      | LVALUE
   98      | LVALUEPROP
   99      | TRUE
  100      | FALSE

  101 ARGS: RVALUE ',' ARGS
  102     | RVALUE

  103 $@9: %empty

  104 $@10: %empty

  105 BLOCO: '{' $@9 CMDs $@10 '}'
  106      | '{' '}'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 62
    '(' (40) 20 23 26 27 28 29 30 47 50 66 67 96
    ')' (41) 20 23 26 27 28 29 30 47 50 66 67 96
    '*' (42) 58
    '+' (43) 59 63
    ',' (44) 24 41 43 72 74 77 79 82 84 101
    '-' (45) 60 64
    '.' (46) 32
    '/' (47) 61
    ':' (58) 41 42
    ';' (59) 6 12 13 14 15 17 29 30
    '<' (60) 56
    '=' (61) 72 73 77 78 82 83 86 89
    '>' (62) 57
    '[' (91) 33 38 39
    ']' (93) 33 38 39
    '^' (94) 55
    '{' (123) 20 23 36 37 47 50 105 106
    '}' (125) 20 23 36 37 47 50 105 106
    error (256)
    ID (258) 20 23 24 25 31 32 41 42 72 73 74 75 77 78 79 80 82 83 84 85
    NUM (259) 94
    MAIG (260) 52
    MEIG (261) 51
    IG (262) 53
    DIF (263) 54
    MAATR (264) 87 90
    MEATR (265) 88 91
    INCREM (266) 92
    DECREM (267) 93
    STRING (268) 95
    COMENTARIO (269)
    LET (270) 71
    CONST (271) 81
    VAR (272) 76
    IF (273) 26 27
    ELSE (274) 27
    WHILE (275) 28
    FOR (276) 29 30
    FUNCTION (277) 20 23 47 50
    RETURN (278) 17
    ASM (279) 14
    TRUE (280) 99
    FALSE (281) 100


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    S (47)
        on left: 1
        on right: 0
    CMDz (48)
        on left: 2 3
        on right: 1 2 20 23 47 50
    CMDs (49)
        on left: 4 5
        on right: 4 105
    CMD (50)
        on left: 6 7 8 9 10 11 12 13 14 15 16
        on right: 2 4 5 26 27 28 29 30
    CMD_RETURN (51)
        on left: 17
        on right: 11
    CMD_FUNCTION (52)
        on left: 20 23
        on right: 10
    $@1 (53)
        on left: 18
        on right: 20
    $@2 (54)
        on left: 19
        on right: 20
    $@3 (55)
        on left: 21
        on right: 23
    $@4 (56)
        on left: 22
        on right: 23
    PARAMS (57)
        on left: 24 25
        on right: 23 24 50
    CMD_IF (58)
        on left: 26 27
        on right: 7
    CMD_WHILE (59)
        on left: 28
        on right: 9
    CMD_FOR (60)
        on left: 29 30
        on right: 8
    LVALUE (61)
        on left: 31
        on right: 86 87 88 92 93 97
    LVALUEPROP (62)
        on left: 32 33
        on right: 89 90 91 98
    RVALUE (63)
        on left: 34 35 36 37 38 39 40
        on right: 17 26 27 28 29 30 33 41 42 43 44 72 73 77 78 82 83 86 87 88 89 90 91 96 101 102
    LIT_DECLS (64)
        on left: 41 42
        on right: 37 41
    ARRAY_DECLS (65)
        on left: 43 44
        on right: 39 43
    ANONYMOUS_FUNCTION (66)
        on left: 47 50
        on right: 40
    $@5 (67)
        on left: 45
        on right: 47
    $@6 (68)
        on left: 46
        on right: 47
    $@7 (69)
        on left: 48
        on right: 50
    $@8 (70)
        on left: 49
        on right: 50
    EXPR (71)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 13 14 32 33 35 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    CMD_DECL (72)
        on left: 68 69 70
        on right: 6 29
    CMD_LET (73)
        on left: 71
        on right: 68
    MULTI_LET (74)
        on left: 72 73 74 75
        on right: 71 72 74
    CMD_VAR (75)
        on left: 76
        on right: 69
    MULTI_VAR (76)
        on left: 77 78 79 80
        on right: 76 77 79
    CMD_CONST (77)
        on left: 81
        on right: 70
    MULTI_CONST (78)
        on left: 82 83 84 85
        on right: 81 82 84
    ATRIB (79)
        on left: 86 87 88 89 90 91 92 93
        on right: 15 29 30 34
    FINAL (80)
        on left: 94 95 96 97 98 99 100
        on right: 65 66 67
    ARGS (81)
        on left: 101 102
        on right: 67 101
    BLOCO (82)
        on left: 105 106
        on right: 16
    $@9 (83)
        on left: 103
        on right: 105
    $@10 (84)
        on left: 104
        on right: 105


State 0

    0 $accept: . S $end

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    S             go to state 19
    CMDz          go to state 20
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 1

   31 LVALUE: ID .

    $default  reduce using rule 31 (LVALUE)


State 2

   94 FINAL: NUM .

    $default  reduce using rule 94 (FINAL)


State 3

   95 FINAL: STRING .

    $default  reduce using rule 95 (FINAL)


State 4

   71 CMD_LET: LET . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 38


State 5

   81 CMD_CONST: CONST . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 40


State 6

   76 CMD_VAR: VAR . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 42


State 7

   26 CMD_IF: IF . '(' RVALUE ')' CMD
   27       | IF . '(' RVALUE ')' CMD ELSE CMD

    '('  shift, and go to state 43


State 8

   28 CMD_WHILE: WHILE . '(' RVALUE ')' CMD

    '('  shift, and go to state 44


State 9

   29 CMD_FOR: FOR . '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   30        | FOR . '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD

    '('  shift, and go to state 45


State 10

   20 CMD_FUNCTION: FUNCTION . ID '(' $@1 ')' '{' CMDz '}' $@2
   23             | FUNCTION . ID '(' $@3 PARAMS ')' '{' CMDz '}' $@4

    ID  shift, and go to state 46


State 11

   17 CMD_RETURN: RETURN . RVALUE ';'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 50
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 12

   99 FINAL: TRUE .

    $default  reduce using rule 99 (FINAL)


State 13

  100 FINAL: FALSE .

    $default  reduce using rule 100 (FINAL)


State 14

   63 EXPR: '+' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 56
    FINAL       go to state 35


State 15

   64 EXPR: '-' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 57
    FINAL       go to state 35


State 16

   12 CMD: ';' .

    $default  reduce using rule 12 (CMD)


State 17

   96 FINAL: '(' . RVALUE ')'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 58
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 18

  105 BLOCO: '{' . $@9 CMDs $@10 '}'
  106      | '{' . '}'

    '}'  shift, and go to state 59

    $default  reduce using rule 103 ($@9)

    $@9  go to state 60


State 19

    0 $accept: S . $end

    $end  shift, and go to state 61


State 20

    1 S: CMDz .

    $default  reduce using rule 1 (S)


State 21

    2 CMDz: CMD . CMDz

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 62
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 22

   11 CMD: CMD_RETURN .

    $default  reduce using rule 11 (CMD)


State 23

   10 CMD: CMD_FUNCTION .

    $default  reduce using rule 10 (CMD)


State 24

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


State 25

    9 CMD: CMD_WHILE .

    $default  reduce using rule 9 (CMD)


State 26

    8 CMD: CMD_FOR .

    $default  reduce using rule 8 (CMD)


State 27

   86 ATRIB: LVALUE . '=' RVALUE
   87      | LVALUE . MAATR RVALUE
   88      | LVALUE . MEATR RVALUE
   92      | LVALUE . INCREM
   93      | LVALUE . DECREM
   97 FINAL: LVALUE .

    MAATR   shift, and go to state 63
    MEATR   shift, and go to state 64
    INCREM  shift, and go to state 65
    DECREM  shift, and go to state 66
    '='     shift, and go to state 67

    $default  reduce using rule 97 (FINAL)


State 28

   89 ATRIB: LVALUEPROP . '=' RVALUE
   90      | LVALUEPROP . MAATR RVALUE
   91      | LVALUEPROP . MEATR RVALUE
   98 FINAL: LVALUEPROP .

    MAATR  shift, and go to state 68
    MEATR  shift, and go to state 69
    '='    shift, and go to state 70

    $default  reduce using rule 98 (FINAL)


State 29

   13 CMD: EXPR . ';'
   14    | EXPR . ASM ';'
   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    MAIG  shift, and go to state 71
    MEIG  shift, and go to state 72
    IG    shift, and go to state 73
    DIF   shift, and go to state 74
    ASM   shift, and go to state 75
    '<'   shift, and go to state 76
    '>'   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '%'   shift, and go to state 82
    '^'   shift, and go to state 83
    '.'   shift, and go to state 84
    '['   shift, and go to state 85
    ';'   shift, and go to state 86


State 30

    6 CMD: CMD_DECL . ';'

    ';'  shift, and go to state 87


State 31

   68 CMD_DECL: CMD_LET .

    $default  reduce using rule 68 (CMD_DECL)


State 32

   69 CMD_DECL: CMD_VAR .

    $default  reduce using rule 69 (CMD_DECL)


State 33

   70 CMD_DECL: CMD_CONST .

    $default  reduce using rule 70 (CMD_DECL)


State 34

   15 CMD: ATRIB . ';'

    ';'  shift, and go to state 88


State 35

   65 EXPR: FINAL .
   66     | FINAL . '(' ')'
   67     | FINAL . '(' ARGS ')'

    '('  shift, and go to state 89

    $default  reduce using rule 65 (EXPR)


State 36

   16 CMD: BLOCO .

    $default  reduce using rule 16 (CMD)


State 37

   72 MULTI_LET: ID . '=' RVALUE ',' MULTI_LET
   73          | ID . '=' RVALUE
   74          | ID . ',' MULTI_LET
   75          | ID .

    '='  shift, and go to state 90
    ','  shift, and go to state 91

    $default  reduce using rule 75 (MULTI_LET)


State 38

   71 CMD_LET: LET MULTI_LET .

    $default  reduce using rule 71 (CMD_LET)


State 39

   82 MULTI_CONST: ID . '=' RVALUE ',' MULTI_CONST
   83            | ID . '=' RVALUE
   84            | ID . ',' MULTI_CONST
   85            | ID .

    '='  shift, and go to state 92
    ','  shift, and go to state 93

    $default  reduce using rule 85 (MULTI_CONST)


State 40

   81 CMD_CONST: CONST MULTI_CONST .

    $default  reduce using rule 81 (CMD_CONST)


State 41

   77 MULTI_VAR: ID . '=' RVALUE ',' MULTI_VAR
   78          | ID . '=' RVALUE
   79          | ID . ',' MULTI_VAR
   80          | ID .

    '='  shift, and go to state 94
    ','  shift, and go to state 95

    $default  reduce using rule 80 (MULTI_VAR)


State 42

   76 CMD_VAR: VAR MULTI_VAR .

    $default  reduce using rule 76 (CMD_VAR)


State 43

   26 CMD_IF: IF '(' . RVALUE ')' CMD
   27       | IF '(' . RVALUE ')' CMD ELSE CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 96
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 44

   28 CMD_WHILE: WHILE '(' . RVALUE ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 97
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 45

   29 CMD_FOR: FOR '(' . CMD_DECL ';' RVALUE ';' ATRIB ')' CMD
   30        | FOR '(' . ATRIB ';' RVALUE ';' ATRIB ')' CMD

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    LET     shift, and go to state 4
    CONST   shift, and go to state 5
    VAR     shift, and go to state 6
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 27
    LVALUEPROP  go to state 28
    EXPR        go to state 98
    CMD_DECL    go to state 99
    CMD_LET     go to state 31
    CMD_VAR     go to state 32
    CMD_CONST   go to state 33
    ATRIB       go to state 100
    FINAL       go to state 35


State 46

   20 CMD_FUNCTION: FUNCTION ID . '(' $@1 ')' '{' CMDz '}' $@2
   23             | FUNCTION ID . '(' $@3 PARAMS ')' '{' CMDz '}' $@4

    '('  shift, and go to state 101


State 47

   47 ANONYMOUS_FUNCTION: FUNCTION . '(' $@5 ')' '{' CMDz '}' $@6
   50                   | FUNCTION . '(' $@7 PARAMS ')' '{' CMDz '}' $@8

    '('  shift, and go to state 102


State 48

   38 RVALUE: '[' . ']'
   39       | '[' . ARRAY_DECLS ']'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49
    ']'       shift, and go to state 103

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 104
    ARRAY_DECLS         go to state 105
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 49

   36 RVALUE: '{' . '}'
   37       | '{' . LIT_DECLS '}'

    ID   shift, and go to state 106
    '}'  shift, and go to state 107

    LIT_DECLS  go to state 108


State 50

   17 CMD_RETURN: RETURN RVALUE . ';'

    ';'  shift, and go to state 109


State 51

   40 RVALUE: ANONYMOUS_FUNCTION .

    $default  reduce using rule 40 (RVALUE)


State 52

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   35 RVALUE: EXPR .
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    MAIG  shift, and go to state 71
    MEIG  shift, and go to state 72
    IG    shift, and go to state 73
    DIF   shift, and go to state 74
    '<'   shift, and go to state 76
    '>'   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '%'   shift, and go to state 82
    '^'   shift, and go to state 83
    '.'   shift, and go to state 84
    '['   shift, and go to state 85

    $default  reduce using rule 35 (RVALUE)


State 53

   34 RVALUE: ATRIB .

    $default  reduce using rule 34 (RVALUE)


State 54

   97 FINAL: LVALUE .

    $default  reduce using rule 97 (FINAL)


State 55

   98 FINAL: LVALUEPROP .

    $default  reduce using rule 98 (FINAL)


State 56

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR
   63     | '+' EXPR .

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 63 (EXPR)


State 57

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR
   64     | '-' EXPR .

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 64 (EXPR)


State 58

   96 FINAL: '(' RVALUE . ')'

    ')'  shift, and go to state 110


State 59

  106 BLOCO: '{' '}' .

    $default  reduce using rule 106 (BLOCO)


State 60

  105 BLOCO: '{' $@9 . CMDs $@10 '}'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMDs          go to state 111
    CMD           go to state 112
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 61

    0 $accept: S $end .

    $default  accept


State 62

    2 CMDz: CMD CMDz .

    $default  reduce using rule 2 (CMDz)


State 63

   87 ATRIB: LVALUE MAATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 113
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 64

   88 ATRIB: LVALUE MEATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 114
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 65

   92 ATRIB: LVALUE INCREM .

    $default  reduce using rule 92 (ATRIB)


State 66

   93 ATRIB: LVALUE DECREM .

    $default  reduce using rule 93 (ATRIB)


State 67

   86 ATRIB: LVALUE '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 115
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 68

   90 ATRIB: LVALUEPROP MAATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 116
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 69

   91 ATRIB: LVALUEPROP MEATR . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 117
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 70

   89 ATRIB: LVALUEPROP '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 118
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 71

   52 EXPR: EXPR MAIG . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 119
    FINAL       go to state 35


State 72

   51 EXPR: EXPR MEIG . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 120
    FINAL       go to state 35


State 73

   53 EXPR: EXPR IG . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 121
    FINAL       go to state 35


State 74

   54 EXPR: EXPR DIF . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 122
    FINAL       go to state 35


State 75

   14 CMD: EXPR ASM . ';'

    ';'  shift, and go to state 123


State 76

   56 EXPR: EXPR '<' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 124
    FINAL       go to state 35


State 77

   57 EXPR: EXPR '>' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 125
    FINAL       go to state 35


State 78

   59 EXPR: EXPR '+' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 126
    FINAL       go to state 35


State 79

   60 EXPR: EXPR '-' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 127
    FINAL       go to state 35


State 80

   58 EXPR: EXPR '*' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 128
    FINAL       go to state 35


State 81

   61 EXPR: EXPR '/' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 129
    FINAL       go to state 35


State 82

   62 EXPR: EXPR '%' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 130
    FINAL       go to state 35


State 83

   55 EXPR: EXPR '^' . EXPR

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 54
    LVALUEPROP  go to state 55
    EXPR        go to state 131
    FINAL       go to state 35


State 84

   32 LVALUEPROP: EXPR '.' . ID

    ID  shift, and go to state 132


State 85

   33 LVALUEPROP: EXPR '[' . RVALUE ']'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 133
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 86

   13 CMD: EXPR ';' .

    $default  reduce using rule 13 (CMD)


State 87

    6 CMD: CMD_DECL ';' .

    $default  reduce using rule 6 (CMD)


State 88

   15 CMD: ATRIB ';' .

    $default  reduce using rule 15 (CMD)


State 89

   66 EXPR: FINAL '(' . ')'
   67     | FINAL '(' . ARGS ')'

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    ')'       shift, and go to state 134
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 135
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35
    ARGS                go to state 136


State 90

   72 MULTI_LET: ID '=' . RVALUE ',' MULTI_LET
   73          | ID '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 137
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 91

   74 MULTI_LET: ID ',' . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 138


State 92

   82 MULTI_CONST: ID '=' . RVALUE ',' MULTI_CONST
   83            | ID '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 139
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 93

   84 MULTI_CONST: ID ',' . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 140


State 94

   77 MULTI_VAR: ID '=' . RVALUE ',' MULTI_VAR
   78          | ID '=' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 141
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 95

   79 MULTI_VAR: ID ',' . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 142


State 96

   26 CMD_IF: IF '(' RVALUE . ')' CMD
   27       | IF '(' RVALUE . ')' CMD ELSE CMD

    ')'  shift, and go to state 143


State 97

   28 CMD_WHILE: WHILE '(' RVALUE . ')' CMD

    ')'  shift, and go to state 144


State 98

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    MAIG  shift, and go to state 71
    MEIG  shift, and go to state 72
    IG    shift, and go to state 73
    DIF   shift, and go to state 74
    '<'   shift, and go to state 76
    '>'   shift, and go to state 77
    '+'   shift, and go to state 78
    '-'   shift, and go to state 79
    '*'   shift, and go to state 80
    '/'   shift, and go to state 81
    '%'   shift, and go to state 82
    '^'   shift, and go to state 83
    '.'   shift, and go to state 84
    '['   shift, and go to state 85


State 99

   29 CMD_FOR: FOR '(' CMD_DECL . ';' RVALUE ';' ATRIB ')' CMD

    ';'  shift, and go to state 145


State 100

   30 CMD_FOR: FOR '(' ATRIB . ';' RVALUE ';' ATRIB ')' CMD

    ';'  shift, and go to state 146


State 101

   20 CMD_FUNCTION: FUNCTION ID '(' . $@1 ')' '{' CMDz '}' $@2
   23             | FUNCTION ID '(' . $@3 PARAMS ')' '{' CMDz '}' $@4

    ID        reduce using rule 21 ($@3)
    $default  reduce using rule 18 ($@1)

    $@1  go to state 147
    $@3  go to state 148


State 102

   47 ANONYMOUS_FUNCTION: FUNCTION '(' . $@5 ')' '{' CMDz '}' $@6
   50                   | FUNCTION '(' . $@7 PARAMS ')' '{' CMDz '}' $@8

    ID        reduce using rule 48 ($@7)
    $default  reduce using rule 45 ($@5)

    $@5  go to state 149
    $@7  go to state 150


State 103

   38 RVALUE: '[' ']' .

    $default  reduce using rule 38 (RVALUE)


State 104

   44 ARRAY_DECLS: RVALUE .

    $default  reduce using rule 44 (ARRAY_DECLS)


State 105

   39 RVALUE: '[' ARRAY_DECLS . ']'
   43 ARRAY_DECLS: ARRAY_DECLS . ',' RVALUE

    ','  shift, and go to state 151
    ']'  shift, and go to state 152


State 106

   41 LIT_DECLS: ID . ':' RVALUE ',' LIT_DECLS
   42          | ID . ':' RVALUE

    ':'  shift, and go to state 153


State 107

   36 RVALUE: '{' '}' .

    $default  reduce using rule 36 (RVALUE)


State 108

   37 RVALUE: '{' LIT_DECLS . '}'

    '}'  shift, and go to state 154


State 109

   17 CMD_RETURN: RETURN RVALUE ';' .

    $default  reduce using rule 17 (CMD_RETURN)


State 110

   96 FINAL: '(' RVALUE ')' .

    $default  reduce using rule 96 (FINAL)


State 111

  105 BLOCO: '{' $@9 CMDs . $@10 '}'

    $default  reduce using rule 104 ($@10)

    $@10  go to state 155


State 112

    4 CMDs: CMD . CMDs
    5     | CMD .

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 5 (CMDs)

    CMDs          go to state 156
    CMD           go to state 112
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 113

   87 ATRIB: LVALUE MAATR RVALUE .

    $default  reduce using rule 87 (ATRIB)


State 114

   88 ATRIB: LVALUE MEATR RVALUE .

    $default  reduce using rule 88 (ATRIB)


State 115

   86 ATRIB: LVALUE '=' RVALUE .

    $default  reduce using rule 86 (ATRIB)


State 116

   90 ATRIB: LVALUEPROP MAATR RVALUE .

    $default  reduce using rule 90 (ATRIB)


State 117

   91 ATRIB: LVALUEPROP MEATR RVALUE .

    $default  reduce using rule 91 (ATRIB)


State 118

   89 ATRIB: LVALUEPROP '=' RVALUE .

    $default  reduce using rule 89 (ATRIB)


State 119

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   52     | EXPR MAIG EXPR .
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 52 (EXPR)


State 120

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   51     | EXPR MEIG EXPR .
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 51 (EXPR)


State 121

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   53     | EXPR IG EXPR .
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 53 (EXPR)


State 122

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   54     | EXPR DIF EXPR .
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 54 (EXPR)


State 123

   14 CMD: EXPR ASM ';' .

    $default  reduce using rule 14 (CMD)


State 124

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   56     | EXPR '<' EXPR .
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 56 (EXPR)


State 125

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   57     | EXPR '>' EXPR .
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    MAIG  error (nonassociative)
    MEIG  error (nonassociative)
    IG    error (nonassociative)
    DIF   error (nonassociative)
    '<'   error (nonassociative)
    '>'   error (nonassociative)

    $default  reduce using rule 57 (EXPR)


State 126

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   59     | EXPR '+' EXPR .
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 59 (EXPR)


State 127

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   60     | EXPR '-' EXPR .
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82
    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 60 (EXPR)


State 128

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   58     | EXPR '*' EXPR .
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 58 (EXPR)


State 129

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   61     | EXPR '/' EXPR .
   62     | EXPR . '%' EXPR

    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 61 (EXPR)


State 130

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR
   62     | EXPR '%' EXPR .

    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 62 (EXPR)


State 131

   32 LVALUEPROP: EXPR . '.' ID
   33           | EXPR . '[' RVALUE ']'
   51 EXPR: EXPR . MEIG EXPR
   52     | EXPR . MAIG EXPR
   53     | EXPR . IG EXPR
   54     | EXPR . DIF EXPR
   55     | EXPR . '^' EXPR
   55     | EXPR '^' EXPR .
   56     | EXPR . '<' EXPR
   57     | EXPR . '>' EXPR
   58     | EXPR . '*' EXPR
   59     | EXPR . '+' EXPR
   60     | EXPR . '-' EXPR
   61     | EXPR . '/' EXPR
   62     | EXPR . '%' EXPR

    '^'  shift, and go to state 83
    '.'  shift, and go to state 84
    '['  shift, and go to state 85

    $default  reduce using rule 55 (EXPR)


State 132

   32 LVALUEPROP: EXPR '.' ID .

    $default  reduce using rule 32 (LVALUEPROP)


State 133

   33 LVALUEPROP: EXPR '[' RVALUE . ']'

    ']'  shift, and go to state 157


State 134

   66 EXPR: FINAL '(' ')' .

    $default  reduce using rule 66 (EXPR)


State 135

  101 ARGS: RVALUE . ',' ARGS
  102     | RVALUE .

    ','  shift, and go to state 158

    $default  reduce using rule 102 (ARGS)


State 136

   67 EXPR: FINAL '(' ARGS . ')'

    ')'  shift, and go to state 159


State 137

   72 MULTI_LET: ID '=' RVALUE . ',' MULTI_LET
   73          | ID '=' RVALUE .

    ','  shift, and go to state 160

    $default  reduce using rule 73 (MULTI_LET)


State 138

   74 MULTI_LET: ID ',' MULTI_LET .

    $default  reduce using rule 74 (MULTI_LET)


State 139

   82 MULTI_CONST: ID '=' RVALUE . ',' MULTI_CONST
   83            | ID '=' RVALUE .

    ','  shift, and go to state 161

    $default  reduce using rule 83 (MULTI_CONST)


State 140

   84 MULTI_CONST: ID ',' MULTI_CONST .

    $default  reduce using rule 84 (MULTI_CONST)


State 141

   77 MULTI_VAR: ID '=' RVALUE . ',' MULTI_VAR
   78          | ID '=' RVALUE .

    ','  shift, and go to state 162

    $default  reduce using rule 78 (MULTI_VAR)


State 142

   79 MULTI_VAR: ID ',' MULTI_VAR .

    $default  reduce using rule 79 (MULTI_VAR)


State 143

   26 CMD_IF: IF '(' RVALUE ')' . CMD
   27       | IF '(' RVALUE ')' . CMD ELSE CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 163
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 144

   28 CMD_WHILE: WHILE '(' RVALUE ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 164
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 145

   29 CMD_FOR: FOR '(' CMD_DECL ';' . RVALUE ';' ATRIB ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 165
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 146

   30 CMD_FOR: FOR '(' ATRIB ';' . RVALUE ';' ATRIB ')' CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 166
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 147

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 . ')' '{' CMDz '}' $@2

    ')'  shift, and go to state 167


State 148

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 . PARAMS ')' '{' CMDz '}' $@4

    ID  shift, and go to state 168

    PARAMS  go to state 169


State 149

   47 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 . ')' '{' CMDz '}' $@6

    ')'  shift, and go to state 170


State 150

   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 . PARAMS ')' '{' CMDz '}' $@8

    ID  shift, and go to state 168

    PARAMS  go to state 171


State 151

   43 ARRAY_DECLS: ARRAY_DECLS ',' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 172
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 152

   39 RVALUE: '[' ARRAY_DECLS ']' .

    $default  reduce using rule 39 (RVALUE)


State 153

   41 LIT_DECLS: ID ':' . RVALUE ',' LIT_DECLS
   42          | ID ':' . RVALUE

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 173
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35


State 154

   37 RVALUE: '{' LIT_DECLS '}' .

    $default  reduce using rule 37 (RVALUE)


State 155

  105 BLOCO: '{' $@9 CMDs $@10 . '}'

    '}'  shift, and go to state 174


State 156

    4 CMDs: CMD CMDs .

    $default  reduce using rule 4 (CMDs)


State 157

   33 LVALUEPROP: EXPR '[' RVALUE ']' .

    $default  reduce using rule 33 (LVALUEPROP)


State 158

  101 ARGS: RVALUE ',' . ARGS

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    FUNCTION  shift, and go to state 47
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    '['       shift, and go to state 48
    '('       shift, and go to state 17
    '{'       shift, and go to state 49

    LVALUE              go to state 27
    LVALUEPROP          go to state 28
    RVALUE              go to state 135
    ANONYMOUS_FUNCTION  go to state 51
    EXPR                go to state 52
    ATRIB               go to state 53
    FINAL               go to state 35
    ARGS                go to state 175


State 159

   67 EXPR: FINAL '(' ARGS ')' .

    $default  reduce using rule 67 (EXPR)


State 160

   72 MULTI_LET: ID '=' RVALUE ',' . MULTI_LET

    ID  shift, and go to state 37

    MULTI_LET  go to state 176


State 161

   82 MULTI_CONST: ID '=' RVALUE ',' . MULTI_CONST

    ID  shift, and go to state 39

    MULTI_CONST  go to state 177


State 162

   77 MULTI_VAR: ID '=' RVALUE ',' . MULTI_VAR

    ID  shift, and go to state 41

    MULTI_VAR  go to state 178


State 163

   26 CMD_IF: IF '(' RVALUE ')' CMD .
   27       | IF '(' RVALUE ')' CMD . ELSE CMD

    ELSE  shift, and go to state 179

    ELSE      [reduce using rule 26 (CMD_IF)]
    $default  reduce using rule 26 (CMD_IF)


State 164

   28 CMD_WHILE: WHILE '(' RVALUE ')' CMD .

    $default  reduce using rule 28 (CMD_WHILE)


State 165

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE . ';' ATRIB ')' CMD

    ';'  shift, and go to state 180


State 166

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE . ';' ATRIB ')' CMD

    ';'  shift, and go to state 181


State 167

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' . '{' CMDz '}' $@2

    '{'  shift, and go to state 182


State 168

   25 PARAMS: ID .

    $default  reduce using rule 25 (PARAMS)


State 169

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS . ')' '{' CMDz '}' $@4
   24 PARAMS: PARAMS . ',' ID

    ')'  shift, and go to state 183
    ','  shift, and go to state 184


State 170

   47 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' . '{' CMDz '}' $@6

    '{'  shift, and go to state 185


State 171

   24 PARAMS: PARAMS . ',' ID
   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS . ')' '{' CMDz '}' $@8

    ')'  shift, and go to state 186
    ','  shift, and go to state 184


State 172

   43 ARRAY_DECLS: ARRAY_DECLS ',' RVALUE .

    $default  reduce using rule 43 (ARRAY_DECLS)


State 173

   41 LIT_DECLS: ID ':' RVALUE . ',' LIT_DECLS
   42          | ID ':' RVALUE .

    ','  shift, and go to state 187

    $default  reduce using rule 42 (LIT_DECLS)


State 174

  105 BLOCO: '{' $@9 CMDs $@10 '}' .

    $default  reduce using rule 105 (BLOCO)


State 175

  101 ARGS: RVALUE ',' ARGS .

    $default  reduce using rule 101 (ARGS)


State 176

   72 MULTI_LET: ID '=' RVALUE ',' MULTI_LET .

    $default  reduce using rule 72 (MULTI_LET)


State 177

   82 MULTI_CONST: ID '=' RVALUE ',' MULTI_CONST .

    $default  reduce using rule 82 (MULTI_CONST)


State 178

   77 MULTI_VAR: ID '=' RVALUE ',' MULTI_VAR .

    $default  reduce using rule 77 (MULTI_VAR)


State 179

   27 CMD_IF: IF '(' RVALUE ')' CMD ELSE . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 188
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 180

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' . ATRIB ')' CMD

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 27
    LVALUEPROP  go to state 28
    EXPR        go to state 98
    ATRIB       go to state 189
    FINAL       go to state 35


State 181

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' . ATRIB ')' CMD

    ID      shift, and go to state 1
    NUM     shift, and go to state 2
    STRING  shift, and go to state 3
    TRUE    shift, and go to state 12
    FALSE   shift, and go to state 13
    '+'     shift, and go to state 14
    '-'     shift, and go to state 15
    '('     shift, and go to state 17

    LVALUE      go to state 27
    LVALUEPROP  go to state 28
    EXPR        go to state 98
    ATRIB       go to state 190
    FINAL       go to state 35


State 182

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' . CMDz '}' $@2

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 191
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 183

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' . '{' CMDz '}' $@4

    '{'  shift, and go to state 192


State 184

   24 PARAMS: PARAMS ',' . ID

    ID  shift, and go to state 193


State 185

   47 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' . CMDz '}' $@6

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 194
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 186

   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' . '{' CMDz '}' $@8

    '{'  shift, and go to state 195


State 187

   41 LIT_DECLS: ID ':' RVALUE ',' . LIT_DECLS

    ID  shift, and go to state 106

    LIT_DECLS  go to state 196


State 188

   27 CMD_IF: IF '(' RVALUE ')' CMD ELSE CMD .

    $default  reduce using rule 27 (CMD_IF)


State 189

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB . ')' CMD

    ')'  shift, and go to state 197


State 190

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB . ')' CMD

    ')'  shift, and go to state 198


State 191

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz . '}' $@2

    '}'  shift, and go to state 199


State 192

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' . CMDz '}' $@4

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 200
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 193

   24 PARAMS: PARAMS ',' ID .

    $default  reduce using rule 24 (PARAMS)


State 194

   47 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz . '}' $@6

    '}'  shift, and go to state 201


State 195

   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' . CMDz '}' $@8

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    $default  reduce using rule 3 (CMDz)

    CMDz          go to state 202
    CMD           go to state 21
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 196

   41 LIT_DECLS: ID ':' RVALUE ',' LIT_DECLS .

    $default  reduce using rule 41 (LIT_DECLS)


State 197

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 203
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 198

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' . CMD

    ID        shift, and go to state 1
    NUM       shift, and go to state 2
    STRING    shift, and go to state 3
    LET       shift, and go to state 4
    CONST     shift, and go to state 5
    VAR       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    FOR       shift, and go to state 9
    FUNCTION  shift, and go to state 10
    RETURN    shift, and go to state 11
    TRUE      shift, and go to state 12
    FALSE     shift, and go to state 13
    '+'       shift, and go to state 14
    '-'       shift, and go to state 15
    ';'       shift, and go to state 16
    '('       shift, and go to state 17
    '{'       shift, and go to state 18

    CMD           go to state 204
    CMD_RETURN    go to state 22
    CMD_FUNCTION  go to state 23
    CMD_IF        go to state 24
    CMD_WHILE     go to state 25
    CMD_FOR       go to state 26
    LVALUE        go to state 27
    LVALUEPROP    go to state 28
    EXPR          go to state 29
    CMD_DECL      go to state 30
    CMD_LET       go to state 31
    CMD_VAR       go to state 32
    CMD_CONST     go to state 33
    ATRIB         go to state 34
    FINAL         go to state 35
    BLOCO         go to state 36


State 199

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz '}' . $@2

    $default  reduce using rule 19 ($@2)

    $@2  go to state 205


State 200

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz . '}' $@4

    '}'  shift, and go to state 206


State 201

   47 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz '}' . $@6

    $default  reduce using rule 46 ($@6)

    $@6  go to state 207


State 202

   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz . '}' $@8

    '}'  shift, and go to state 208


State 203

   29 CMD_FOR: FOR '(' CMD_DECL ';' RVALUE ';' ATRIB ')' CMD .

    $default  reduce using rule 29 (CMD_FOR)


State 204

   30 CMD_FOR: FOR '(' ATRIB ';' RVALUE ';' ATRIB ')' CMD .

    $default  reduce using rule 30 (CMD_FOR)


State 205

   20 CMD_FUNCTION: FUNCTION ID '(' $@1 ')' '{' CMDz '}' $@2 .

    $default  reduce using rule 20 (CMD_FUNCTION)


State 206

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz '}' . $@4

    $default  reduce using rule 22 ($@4)

    $@4  go to state 209


State 207

   47 ANONYMOUS_FUNCTION: FUNCTION '(' $@5 ')' '{' CMDz '}' $@6 .

    $default  reduce using rule 47 (ANONYMOUS_FUNCTION)


State 208

   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz '}' . $@8

    $default  reduce using rule 49 ($@8)

    $@8  go to state 210


State 209

   23 CMD_FUNCTION: FUNCTION ID '(' $@3 PARAMS ')' '{' CMDz '}' $@4 .

    $default  reduce using rule 23 (CMD_FUNCTION)


State 210

   50 ANONYMOUS_FUNCTION: FUNCTION '(' $@7 PARAMS ')' '{' CMDz '}' $@8 .

    $default  reduce using rule 50 (ANONYMOUS_FUNCTION)
